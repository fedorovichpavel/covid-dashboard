{"version":3,"sources":["webpack://covid-dashboard/./src/normalize.css?dcfb","webpack://covid-dashboard/./src/style.css?fcc1","webpack://covid-dashboard/./src/assets/js/app.js","webpack://covid-dashboard/./src/assets/js/countries.js","webpack://covid-dashboard/./src/assets/js/country-codes.js","webpack://covid-dashboard/./src/assets/js/main.js","webpack://covid-dashboard/./src/assets/js/map.js","webpack://covid-dashboard/./src/assets/js/script.js","webpack://covid-dashboard/./src/index.js","webpack://covid-dashboard/webpack/bootstrap","webpack://covid-dashboard/webpack/runtime/compat get default export","webpack://covid-dashboard/webpack/runtime/define property getters","webpack://covid-dashboard/webpack/runtime/hasOwnProperty shorthand","webpack://covid-dashboard/webpack/runtime/make namespace object","webpack://covid-dashboard/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,gBAAgB;AAC5D,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AAC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AAkC;AACpC,EAAE,+BAA+B;AACjC,EAAE,4CAA4C;AAC9C,EAAE,4BAA4B;AAC9B,EAAE;AACF,E;;;;;;;;;;;;;;;AC7MO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;ACx6DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL,GAAG;;;AAGH;;;;;;;;;;;;;;ACtCgD;;AAEhD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,iDAAiD,2CAA2C;;AAE5F;AACA,iEAAqB;;AAErB;AACA,mBAAmB,kBAAkB;AACrC,oBAAoB,kBAAkB;AACtC,qBAAqB,kBAAkB;AACvC,sBAAsB,kBAAkB;AACxC;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;;AAGA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,+CAA+C,qBAAqB,QAAQ,uBAAuB,eAAe;AAClH;;;AAGA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET,KAAK;AACL,8B;;;;;;;;;;;;;AChE2C;;AAE3C;AACA;AACA;AACA;AACA;;;AAGA;AACA,2BAA2B,2DAAmB;;AAE9C;AACA;;AAEA,CAAC,4DAAoB;AACrB;AACA,4BAA4B,EAAE;AAC9B,uCAAuC,eAAe;AACtD;AACA;AACA,uBAAuB,aAAa;AACpC,6BAA6B,eAAe;AAC5C,qCAAqC,aAAa,UAAU,aAAa;AACzE,IAAI;AACJ;AACA;;AAEA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;;AAED;AACA;;AAEA,CAAC,4DAAoB;AACrB;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF,CAAC;;AAED;AACA,CAAC,4DAAoB;AACrB;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4DAAoB;AACpB;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;;AAEJ;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA,KAAK;AACL,IAAI;;AAEJ;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL,IAAI;;AAEJ;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA,mCAAmC,kBAAkB;AACrD;AACA,gCAAgC,eAAe;;AAE/C;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;;;;AAIA;AACA;AACA;AACA,WAAW,eAAe,GAAG,MAAM;AACnC,C;;;;;;;;;;;;;;;;;;;;;;AChQyB;AACA;AACC;AACD;AACJ;;AAEc;AACJ;;;;;;;UCP/B;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"script.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","//GLOBAL DATA\r\nlet objDataGlobal = {\r\n  totalConfirmed: 0,\r\n  totalRecovered: 0,\r\n  totalDeaths: 0,\r\n  newConfirmed: 0,\r\n  newRecovered: 0,\r\n  newDeaths: 0,\r\n  countries: []\r\n}\r\nlet data;\r\n\r\n//get data on page load\r\naddEventListener('load', getData);\r\n\r\n//get new data at 00:00 every day\r\nlet updateData = setInterval(function() {\r\n  const today = new Date();\r\n  const hour = today.getHours();\r\n  const min = today.getMinutes();\r\n  const sec = today.getSeconds();\r\n  if(hour === 0 && min === 0 && sec === 0) {getGlobalData(); setGlobalDataToLocal();}\r\n}, 1000);\r\n\r\n//function\r\nfunction getData() {\r\n  // if(localStorage.getItem('totalConfirmed') === undefined || localStorage.getItem('totalConfirmed') === '0') {\r\n  //   getGlobalData();\r\n  //   setGlobalDataToLocal();\r\n  // } else {\r\n  //   console.log('взято из памяти');\r\n  //   getDataGlobalFromLocal();\r\n  // }\r\n  const today = new Date();\r\n  const day = today.getDate();\r\n  const month = today.getMonth() + 1;\r\n  const year = today.getFullYear();\r\n\r\n  const hour = today.getHours();\r\n  const min = today.getMinutes();\r\n  const sec = today.getSeconds();\r\n  if(day < 10) {\r\n\t\tdocument.getElementById('dd').innerText = '0' + day;\r\n  } else document.getElementById('dd').innerText = day;\r\n  if(month < 10) {\r\n\t\tdocument.getElementById('mm').innerText = '0' + month;\r\n  } else document.getElementById('mm').innerText = month;\r\n  document.getElementById('yy').innerText = year;\r\n  if(hour < 10) {\r\n\t\tdocument.getElementById('hours').innerText = '0' + hour;\r\n\t\t} else document.getElementById('hours').innerText = hour;\r\n\tif(min < 10) {\r\n\t\tdocument.getElementById('minutes').innerText = '0' + min;\r\n\t\t} else document.getElementById('minutes').innerText = min;\r\n\r\n  getGlobalData();\r\n  // addToDOM();\r\n}\r\n\r\nasync function getGlobalData() {\r\n  const url = 'https://api.covid19api.com/summary';\r\n  const res = await fetch(url);\r\n  data = await res.json();\r\n  //get data global\r\n  objDataGlobal.totalConfirmed = data.Global.TotalConfirmed;\r\n  objDataGlobal.totalRecovered = data.Global.TotalRecovered;\r\n  objDataGlobal.totalDeaths = data.Global.TotalDeaths;\r\n  //get data last day\r\n  objDataGlobal.newConfirmed = data.Global.NewConfirmed;\r\n  objDataGlobal.newRecovered = data.Global.NewRecovered;\r\n  objDataGlobal.newDeaths = data.Global.NewDeaths;\r\n  //get data by country\r\n  objDataGlobal.countries = data.Countries;\r\n  addToDOM();\r\n}\r\n\r\nfunction setGlobalDataToLocal() {\r\n  //data last day and global\r\n  const totalConfirmed = objDataGlobal.totalConfirmed;\r\n  const totalRecovered = objDataGlobal.totalRecovered;\r\n  const totalDeaths = objDataGlobal.totalDeaths;\r\n  const newConfirmed = objDataGlobal.newConfirmed;\r\n  const newRecovered = objDataGlobal.newRecovered;\r\n  const newDeaths = objDataGlobal.newDeaths;\r\n  //save in LocalStorage\r\n\tlocalStorage.setItem('totalConfirmed', totalConfirmed);\r\n  localStorage.setItem('totalRecovered', totalRecovered);\r\n  localStorage.setItem('totalDeaths', totalDeaths);\r\n  localStorage.setItem('newConfirmed', newConfirmed);\r\n  localStorage.setItem('newRecovered', newRecovered);\r\n  localStorage.setItem('newDeaths', newDeaths);\r\n}\r\n\r\nfunction getDataGlobalFromLocal() {\r\n  //get data global\r\n  objDataGlobal.totalConfirmed = localStorage.getItem('totalConfirmed');\r\n  objDataGlobal.totalRecovered = localStorage.getItem('totalRecovered');\r\n  objDataGlobal.totalDeaths = localStorage.getItem('totalDeaths');\r\n  //get data last day\r\n  objDataGlobal.newConfirmed = localStorage.getItem('newConfirmed');\r\n  objDataGlobal.newRecovered = localStorage.getItem('newRecovered');\r\n  objDataGlobal.newDeaths = localStorage.getItem('newDeaths');\r\n}\r\n\r\nfunction addToDOM() {\r\n  const countPeopleAll = 7827000000;\r\n  const countPeople = countPeopleAll / 100000;\r\n  //data global per 100 thousand population\r\n  const totalConfirmedForPeople = Math.round(objDataGlobal.totalConfirmed / countPeople);\r\n  const totalRecoveredForPeople = Math.round(objDataGlobal.totalRecovered / countPeople);\r\n  const totalDeathsForPeople = Math.round(objDataGlobal.totalDeaths / countPeople);\r\n\r\n  //data last day per 100 thousand population\r\n  const newConfirmedForPeople = Math.round(objDataGlobal.newConfirmed / countPeople);\r\n  const newRecoveredForPeople = Math.round(objDataGlobal.newRecovered / countPeople);\r\n  const newDeathsForPeople = Math.round(objDataGlobal.newDeaths / countPeople);\r\n\r\n  arrData = [\r\n    [objDataGlobal.totalConfirmed, objDataGlobal.totalRecovered, objDataGlobal.totalDeaths, 'Global for the world', '(absolute values)'],\r\n    [objDataGlobal.newConfirmed, objDataGlobal.newRecovered, objDataGlobal.newDeaths, 'Global for the last day', '(absolute values)'],\r\n    [totalConfirmedForPeople, totalRecoveredForPeople , totalDeathsForPeople, 'Global for the world', '(per 100 thousand population)'],\r\n    [newConfirmedForPeople, newRecoveredForPeople, newDeathsForPeople, 'Global for the last day', '(per 100 thousand population)']\r\n  ];\r\n\r\n  //add data to DOM\r\n  let dataCases = document.querySelector('.data-cases p');\r\n  let dataRecovered = document.querySelector('.data-recovered p');\r\n  let dataDeaths = document.querySelector('.data-deaths p');\r\n  let headerWidget = document.querySelector('.global h3');\r\n  let headerWidgetNote = document.querySelector('.note');\r\n\r\n  //value default - global\r\n  const startIndex = 0;\r\n  addContentGlobalDate(startIndex);\r\n\r\n  //select other global data\r\n  selectData();\r\n  function selectData() {\r\n    let index = 0;\r\n    const next = document.querySelector('.next');\r\n    const prev = document.querySelector('.prev');\r\n    next.addEventListener('click', function() {\r\n      if(index === 3) {\r\n        index = 0;\r\n      } else {\r\n        index ++;\r\n      }\r\n      addContentGlobalDate(index);\r\n    });\r\n    prev.addEventListener('click', function() {\r\n      if(index === 0) {\r\n        index = 3;\r\n      } else {\r\n        index --;\r\n      }\r\n      addContentGlobalDate(index);\r\n    });\r\n  }\r\n  function addContentGlobalDate(index) {\r\n    dataCases.textContent = arrData[index][0].toLocaleString();\r\n    dataRecovered.textContent = arrData[index][1].toLocaleString();\r\n    dataDeaths.textContent = arrData[index][2].toLocaleString();\r\n    headerWidget.textContent = arrData[index][3].toLocaleString();\r\n    headerWidgetNote.textContent = arrData[index][4].toLocaleString();\r\n  }\r\n\r\n\r\n  //add list countries\r\n  let parentCountries = document.querySelector('.countries');\r\n  const countCountries = objDataGlobal.countries.length;\r\n  for (let i = 0; i < countCountries; i++) {\r\n    let itemList = document.createElement('li');\r\n    itemList.classList.add('item-country');\r\n    itemList.setAttribute('data-id', i);\r\n    parentCountries.appendChild(itemList);\r\n  }\r\n  let listCountries = document.querySelectorAll('.countries .item-country');\r\n  listCountries.forEach((item, i) => {\r\n    // item.setAttribute('data-id', objDataGlobal.countries[i].ID);\r\n    let arrWork = objDataGlobal.countries;\r\n    arrWork.sort((a, b) => b.TotalConfirmed - a.TotalConfirmed);\r\n    item.textContent = arrWork[i].Country;\r\n    const countForItem = document.createElement('span');\r\n    item.appendChild(countForItem);\r\n    countForItem.textContent = ' - ' + arrWork[i].TotalConfirmed.toLocaleString();\r\n  });\r\n\r\n\r\n  //get data by country for click\r\n  parentCountries.addEventListener('click', function(event) {\r\n    let target = event.target;\r\n    while(target !== parentCountries) {\r\n      if(target.tagName === 'LI') {\r\n          console.log(target);\r\n          const i = target.getAttribute('data-id');\r\n          console.log('ID - ', i);\r\n          viewDataForCountry(i);\r\n          return;\r\n      };\r\n      target = target.parentElement;\r\n    }\r\n  })\r\n\r\n  function viewDataForCountry(i) {\r\n    console.log(objDataGlobal.countries[i]);\r\n    let item = objDataGlobal.countries[i];\r\n\r\n    const countPeopleAll = 7827000000;\r\n    const countPeople = countPeopleAll / 100000;\r\n    //data global per 100 thousand population\r\n    const totalConfirmedForPeople = Math.round(item.TotalConfirmed / countPeople);\r\n    const totalRecoveredForPeople = Math.round(item.TotalRecovere / countPeople);\r\n    const totalDeathsForPeople = Math.round(item.TotalDeaths / countPeople);\r\n\r\n    //data last day per 100 thousand population\r\n    const newConfirmedForPeople = Math.round(objDataGlobal.newConfirmed / countPeople);\r\n    const newRecoveredForPeople = Math.round(objDataGlobal.newRecovered / countPeople);\r\n    const newDeathsForPeople = Math.round(objDataGlobal.newDeaths / countPeople);\r\n\r\n    arrData = [\r\n      [item.TotalConfirmed, item.TotalRecovered, item.TotalDeaths, 'Global for the world', '(absolute values)'],\r\n      [item.NewConfirmed, item.NewRecovered, item.NewDeaths, 'Global for the last day', '(absolute values)'],\r\n      [totalConfirmedForPeople, totalRecoveredForPeople , totalDeathsForPeople, 'Global for the world', '(per 100 thousand population)'],\r\n      [newConfirmedForPeople, newRecoveredForPeople, newDeathsForPeople, 'Global for the last day', '(per 100 thousand population)']\r\n    ];\r\n\r\n    const startIndex = 0;\r\n    addContentGlobalDate(startIndex);\r\n\r\n    //select other global data\r\n    selectData();\r\n  }\r\n}\r\n","\r\nexport let country_list = [\r\n\t{ name: 'USA', code: 'US' },\r\n\t{ name: 'Spain', code: 'ES' },\r\n\t{ name: 'Italy', code: 'IT' },\r\n\t{ name: 'France', code: 'FR' },\r\n\t{ name: 'Germany', code: 'DE' },\r\n\t{ name: 'UK', code: 'GB' },\r\n\t{ name: 'Turkey', code: 'TR' },\r\n\t{ name: 'Iran', code: 'IR' },\r\n\t{ name: 'Russia', code: 'RU' },\r\n\t{ name: 'Belgium', code: 'BE' },\r\n\t{ name: 'Brazil', code: 'BR' },\r\n\t{ name: 'Canada', code: 'CA' },\r\n\t{ name: 'Netherlands', code: 'NL' },\r\n\t{ name: 'Switzerland', code: 'CH' },\r\n\t{ name: 'Portugal', code: 'PT' },\r\n\t{ name: 'India', code: 'IN' },\r\n\t{ name: 'Ireland', code: 'IE' },\r\n\t{ name: 'Austria', code: 'AT' },\r\n\t{ name: 'Peru', code: 'PE' },\r\n\t{ name: 'Sweden', code: 'SE' },\r\n\t{ name: 'Japan', code: 'JP' },\r\n\t{ name: 'S. Korea', code: 'KR' },\r\n\t{ name: 'Chile', code: 'CL' },\r\n\t{ name: 'Saudi Arabia', code: 'SA' },\r\n\t{ name: 'Poland', code: 'PL' },\r\n\t{ name: 'Ecuador', code: 'EC' },\r\n\t{ name: 'Romania', code: 'RO' },\r\n\t{ name: 'Pakistan', code: 'PK' },\r\n\t{ name: 'Mexico', code: 'MX' },\r\n\t{ name: 'Denmark', code: 'DK' },\r\n\t{ name: 'Norway', code: 'NO' },\r\n\t{ name: 'UAE', code: 'AE' },\r\n\t{ name: 'Czechia', code: 'CZ' },\r\n\t{ name: 'Australia', code: 'AU' },\r\n\t{ name: 'Singapore', code: 'SG' },\r\n\t{ name: 'Indonesia', code: 'ID' },\r\n\t{ name: 'Serbia', code: 'RS' },\r\n\t{ name: 'Philippines', code: 'PH' },\r\n\t{ name: 'Ukraine', code: 'UA' },\r\n\t{ name: 'Qatar', code: 'QA' },\r\n\t{ name: 'Malaysia', code: 'MY' },\r\n\t{ name: 'Belarus', code: 'BY' },\r\n\t{ name: 'Dominican Republic', code: 'DO' },\r\n\t{ name: 'Panama', code: 'PA' },\r\n\t{ name: 'Finland', code: 'FI' },\r\n\t{ name: 'Colombia', code: 'CO' },\r\n\t{ name: 'Luxembourg', code: 'LU' },\r\n\t{ name: 'South Africa', code: 'ZA' },\r\n\t{ name: 'Egypt', code: 'EG' },\r\n\t{ name: 'Argentina', code: 'AR' },\r\n\t{ name: 'Morocco', code: 'MA' },\r\n\t{ name: 'Thailand', code: 'TH' },\r\n\t{ name: 'Algeria', code: 'DZ' },\r\n\t{ name: 'Moldova', code: 'MD' },\r\n\t{ name: 'Bangladesh', code: 'BD' },\r\n\t{ name: 'Greece', code: 'GR' },\r\n\t{ name: 'Hungary', code: 'HU' },\r\n\t{ name: 'Kuwait', code: 'KW' },\r\n\t{ name: 'Bahrain', code: 'BH' },\r\n\t{ name: 'Croatia', code: 'HR' },\r\n\t{ name: 'Iceland', code: 'IS' },\r\n\t{ name: 'Kazakhstan', code: 'KZ' },\r\n\t{ name: 'Uzbekistan', code: 'UZ' },\r\n\t{ name: 'Estonia', code: 'EE' },\r\n\t{ name: 'Iraq', code: 'IQ' },\r\n\t{ name: 'New Zealand', code: 'NZ' },\r\n\t{ name: 'Azerbaijan', code: 'AZ' },\r\n\t{ name: 'Slovenia', code: 'SI' },\r\n\t{ name: 'Lithuania', code: 'LT' },\r\n\t{ name: 'Armenia', code: 'AM' },\r\n\t{ name: 'Bosnia and Herzegovina', code: 'BA' },\r\n\t{ name: 'Oman', code: 'OM' },\r\n\t{ name: 'North Macedonia', code: 'MK' },\r\n\t{ name: 'Slovakia', code: 'SK' },\r\n\t{ name: 'Cuba', code: 'CU' },\r\n\t{ name: 'Hong Kong', code: 'HK' },\r\n\t{ name: 'Cameroon', code: 'CM' },\r\n\t{ name: 'Afghanistan', code: 'AF' },\r\n\t{ name: 'Bulgaria', code: 'BG' },\r\n\t{ name: 'Tunisia', code: 'TN' },\r\n\t{ name: 'Ghana', code: 'GH' },\r\n\t{ name: 'Ivory Coast', code: 'CI' },\r\n\t{ name: 'Cyprus', code: 'CY' },\r\n\t{ name: 'Djibouti', code: 'DJ' },\r\n\t{ name: 'Latvia', code: 'LV' },\r\n\t{ name: 'Andorra', code: 'AD' },\r\n\t{ name: 'Lebanon', code: 'LB' },\r\n\t{ name: 'Costa Rica', code: 'CR' },\r\n\t{ name: 'Niger', code: 'NE' },\r\n\t{ name: 'Burkina Faso', code: 'BF' },\r\n\t{ name: 'Albania', code: 'AL' },\r\n\t{ name: 'Kyrgyzstan', code: 'KG' },\r\n\t{ name: 'Nigeria', code: 'NG' },\r\n\t{ name: 'Bolivia', code: 'BO' },\r\n\t{ name: 'Guinea', code: 'GN' },\r\n\t{ name: 'Uruguay', code: 'UY' },\r\n\t{ name: 'Honduras', code: 'HN' },\r\n\t{ name: 'San Marino', code: 'SM' },\r\n\t{ name: 'Palestine', code: 'PS' },\r\n\t{ name: 'Malta', code: 'MT' },\r\n\t{ name: 'Taiwan', code: 'TW' },\r\n\t{ name: 'Jordan', code: 'JO' },\r\n\t{ name: 'Réunion', code: 'RE' },\r\n\t{ name: 'Georgia', code: 'GE' },\r\n\t{ name: 'Senegal', code: 'SN' },\r\n\t{ name: 'Mauritius', code: 'MU' },\r\n\t{ name: 'DRC', code: 'CD' },\r\n\t{ name: 'Montenegro', code: 'ME' },\r\n\t{ name: 'Isle of Man', code: 'IM' },\r\n\t{ name: 'Sri Lanka', code: 'LK' },\r\n\t{ name: 'Mayotte', code: 'YT' },\r\n\t{ name: 'Kenya', code: 'KE' },\r\n\t{ name: 'Vietnam', code: 'VN' },\r\n\t{ name: 'Guatemala', code: 'GT' },\r\n\t{ name: 'Venezuela', code: 'VE' },\r\n\t{ name: 'Mali', code: 'ML' },\r\n\t{ name: 'Paraguay', code: 'PY' },\r\n\t{ name: 'El Salvador', code: 'SV' },\r\n\t{ name: 'Jamaica', code: 'JM' },\r\n\t{ name: 'Tanzania', code: 'TZ' },\r\n\t{ name: 'Martinique', code: 'MQ' },\r\n\t{ name: 'Guadeloupe', code: 'GP' },\r\n\t{ name: 'Rwanda', code: 'RW' },\r\n\t{ name: 'Congo', code: 'CG' },\r\n\t{ name: 'Brunei', code: 'BN' },\r\n\t{ name: 'Somalia', code: 'SO' },\r\n\t{ name: 'Gibraltar', code: 'GI' },\r\n\t{ name: 'Cambodia', code: 'KH' },\r\n\t{ name: 'Madagascar', code: 'MG' },\r\n\t{ name: 'Trinidad and Tobago', code: 'TT' },\r\n\t{ name: 'Gabon', code: 'GA' },\r\n\t{ name: 'Myanmar', code: 'MM' },\r\n\t{ name: 'Ethiopia', code: 'ET' },\r\n\t{ name: 'Aruba', code: 'AW' },\r\n\t{ name: 'French Guiana', code: 'GF' },\r\n\t{ name: 'Monaco', code: 'MC' },\r\n\t{ name: 'Bermuda', code: 'BM' },\r\n\t{ name: 'Togo', code: 'TG' },\r\n\t{ name: 'Liechtenstein', code: 'LI' },\r\n\t{ name: 'Equatorial Guinea', code: 'GQ' },\r\n\t{ name: 'Liberia', code: 'LR' },\r\n\t{ name: 'Barbados', code: 'BB' },\r\n\t{ name: 'Sudan', code: 'SD' },\r\n\t{ name: 'Guyana', code: 'GY' },\r\n\t{ name: 'Zambia', code: 'ZM' },\r\n\t{ name: 'Cabo Verde', code: 'CV' },\r\n\t{ name: 'Cayman Islands', code: 'KY' },\r\n\t{ name: 'Bahamas', code: 'BS' },\r\n\t{ name: 'French Polynesia', code: 'PF' },\r\n\t{ name: 'Uganda', code: 'UG' },\r\n\t{ name: 'Maldives', code: 'MV' },\r\n\t{ name: 'Libya', code: 'LY' },\r\n\t{ name: 'Guinea-Bissau', code: 'GW' },\r\n\t{ name: 'Macao', code: 'MO' },\r\n\t{ name: 'Haiti', code: 'HT' },\r\n\t{ name: 'Syria', code: 'SY' },\r\n\t{ name: 'Eritrea', code: 'ER' },\r\n\t{ name: 'Mozambique', code: 'MZ' },\r\n\t{ name: 'Saint Martin', code: 'MF' },\r\n\t{ name: 'Benin', code: 'BJ' },\r\n\t{ name: 'Chad', code: 'TD' },\r\n\t{ name: 'Mongolia', code: 'MN' },\r\n\t{ name: 'Nepal', code: 'NP' },\r\n\t{ name: 'Sierra Leone', code: 'SL' },\r\n\t{ name: 'Zimbabwe', code: 'ZW' },\r\n\t{ name: 'Angola', code: 'AO' },\r\n\t{ name: 'Antigua and Barbuda', code: 'AG' },\r\n\t{ name: 'Eswatini', code: 'SZ' },\r\n\t{ name: 'Botswana', code: 'BW' },\r\n\t{ name: 'Timor-Leste', code: 'TL' },\r\n\t{ name: 'Belize', code: 'BZ' },\r\n\t{ name: 'New Caledonia', code: 'NC' },\r\n\t{ name: 'Malawi', code: 'MW' },\r\n\t{ name: 'Fiji', code: 'FJ' },\r\n\t{ name: 'Dominica', code: 'DM' },\r\n\t{ name: 'Namibia', code: 'NA' },\r\n\t{ name: 'Saint Lucia', code: 'LC' },\r\n\t{ name: 'Grenada', code: 'GD' },\r\n\t{ name: 'Saint Kitts and Nevis', code: 'KN' },\r\n\t{ name: 'CAR', code: 'CF' },\r\n\t{ name: 'St. Vincent Grenadines', code: 'VC' },\r\n\t{ name: 'Turks and Caicos', code: 'TC' },\r\n\t{ name: 'Falkland Islands', code: 'FK' },\r\n\t{ name: 'Greenland', code: 'GL' },\r\n\t{ name: 'Montserrat', code: 'MS' },\r\n\t{ name: 'Seychelles', code: 'SC' },\r\n\t{ name: 'Suriname', code: 'SR' },\r\n\t{ name: 'Nicaragua', code: 'NI' },\r\n\t{ name: 'Gambia', code: 'GM' },\r\n\t{ name: 'Vatican City', code: 'VA' },\r\n\t{ name: 'Mauritania', code: 'MR' },\r\n\t{ name: 'Papua New Guinea', code: 'PG' },\r\n\t{ name: 'St. Barth', code: 'BL' },\r\n\t{ name: 'Burundi', code: 'BI' },\r\n\t{ name: 'Bhutan', code: 'BT' },\r\n\t{ name: 'Caribbean Netherlands', code: 'BQ' },\r\n\t{ name: 'British Virgin Islands', code: 'VG' },\r\n\t{ name: 'Sao Tome and Principe', code: 'ST' },\r\n\t{ name: 'South Sudan', code: 'SD' },\r\n\t{ name: 'Anguilla', code: 'AI' },\r\n\t{ name: 'Saint Pierre Miquelon', code: 'PM' },\r\n\t{ name: 'Yemen', code: 'YE' },\r\n\t{ name: 'China', code: 'CN' }\r\n];","export const country_codes = [{\r\n  country: 'Albania',\r\n  alpha2: 'AL',\r\n  alpha3: 'ALB',\r\n  numeric: 8,\r\n  latitude: 41,\r\n  longitude: 20,\r\n},\r\n{\r\n  country: 'Algeria',\r\n  alpha2: 'DZ',\r\n  alpha3: 'DZA',\r\n  numeric: 12,\r\n  latitude: 28,\r\n  longitude: 3,\r\n},\r\n{\r\n  country: 'American Samoa',\r\n  alpha2: 'AS',\r\n  alpha3: 'ASM',\r\n  numeric: 16,\r\n  latitude: -14.3333,\r\n  longitude: -170,\r\n},\r\n{\r\n  country: 'Andorra',\r\n  alpha2: 'AD',\r\n  alpha3: 'AND',\r\n  numeric: 20,\r\n  latitude: 42.5,\r\n  longitude: 1.6,\r\n},\r\n{\r\n  country: 'Angola',\r\n  alpha2: 'AO',\r\n  alpha3: 'AGO',\r\n  numeric: 24,\r\n  latitude: -12.5,\r\n  longitude: 18.5,\r\n},\r\n{\r\n  country: 'Anguilla',\r\n  alpha2: 'AI',\r\n  alpha3: 'AIA',\r\n  numeric: 660,\r\n  latitude: 18.25,\r\n  longitude: -63.1667,\r\n},\r\n{\r\n  country: 'Antarctica',\r\n  alpha2: 'AQ',\r\n  alpha3: 'ATA',\r\n  numeric: 10,\r\n  latitude: -90,\r\n  longitude: 0,\r\n},\r\n{\r\n  country: 'Antigua and Barbuda',\r\n  alpha2: 'AG',\r\n  alpha3: 'ATG',\r\n  numeric: 28,\r\n  latitude: 17.05,\r\n  longitude: -61.8,\r\n},\r\n{\r\n  country: 'Argentina',\r\n  alpha2: 'AR',\r\n  alpha3: 'ARG',\r\n  numeric: 32,\r\n  latitude: -34,\r\n  longitude: -64,\r\n},\r\n{\r\n  country: 'Armenia',\r\n  alpha2: 'AM',\r\n  alpha3: 'ARM',\r\n  numeric: 51,\r\n  latitude: 40,\r\n  longitude: 45,\r\n},\r\n{\r\n  country: 'Aruba',\r\n  alpha2: 'AW',\r\n  alpha3: 'ABW',\r\n  numeric: 533,\r\n  latitude: 12.5,\r\n  longitude: -69.9667,\r\n},\r\n{\r\n  country: 'Australia',\r\n  alpha2: 'AU',\r\n  alpha3: 'AUS',\r\n  numeric: 36,\r\n  latitude: -27,\r\n  longitude: 133,\r\n},\r\n{\r\n  country: 'Austria',\r\n  alpha2: 'AT',\r\n  alpha3: 'AUT',\r\n  numeric: 40,\r\n  latitude: 47.3333,\r\n  longitude: 13.3333,\r\n},\r\n{\r\n  country: 'Azerbaijan',\r\n  alpha2: 'AZ',\r\n  alpha3: 'AZE',\r\n  numeric: 31,\r\n  latitude: 40.5,\r\n  longitude: 47.5,\r\n},\r\n{\r\n  country: 'Bahamas',\r\n  alpha2: 'BS',\r\n  alpha3: 'BHS',\r\n  numeric: 44,\r\n  latitude: 24.25,\r\n  longitude: -76,\r\n},\r\n{\r\n  country: 'Bahrain',\r\n  alpha2: 'BH',\r\n  alpha3: 'BHR',\r\n  numeric: 48,\r\n  latitude: 26,\r\n  longitude: 50.55,\r\n},\r\n{\r\n  country: 'Bangladesh',\r\n  alpha2: 'BD',\r\n  alpha3: 'BGD',\r\n  numeric: 50,\r\n  latitude: 24,\r\n  longitude: 90,\r\n},\r\n{\r\n  country: 'Barbados',\r\n  alpha2: 'BB',\r\n  alpha3: 'BRB',\r\n  numeric: 52,\r\n  latitude: 13.1667,\r\n  longitude: -59.5333,\r\n},\r\n{\r\n  country: 'Belarus',\r\n  alpha2: 'BY',\r\n  alpha3: 'BLR',\r\n  numeric: 112,\r\n  latitude: 53,\r\n  longitude: 28,\r\n},\r\n{\r\n  country: 'Belgium',\r\n  alpha2: 'BE',\r\n  alpha3: 'BEL',\r\n  numeric: 56,\r\n  latitude: 50.8333,\r\n  longitude: 4,\r\n},\r\n{\r\n  country: 'Belize',\r\n  alpha2: 'BZ',\r\n  alpha3: 'BLZ',\r\n  numeric: 84,\r\n  latitude: 17.25,\r\n  longitude: -88.75,\r\n},\r\n{\r\n  country: 'Benin',\r\n  alpha2: 'BJ',\r\n  alpha3: 'BEN',\r\n  numeric: 204,\r\n  latitude: 9.5,\r\n  longitude: 2.25,\r\n},\r\n{\r\n  country: 'Bermuda',\r\n  alpha2: 'BM',\r\n  alpha3: 'BMU',\r\n  numeric: 60,\r\n  latitude: 32.3333,\r\n  longitude: -64.75,\r\n},\r\n{\r\n  country: 'Bhutan',\r\n  alpha2: 'BT',\r\n  alpha3: 'BTN',\r\n  numeric: 64,\r\n  latitude: 27.5,\r\n  longitude: 90.5,\r\n},\r\n{\r\n  country: 'Bolivia',\r\n  alpha2: 'BO',\r\n  alpha3: 'BOL',\r\n  numeric: 68,\r\n  latitude: -17,\r\n  longitude: -65,\r\n},\r\n{\r\n  country: 'Bosnia and Herzegovina',\r\n  alpha2: 'BA',\r\n  alpha3: 'BIH',\r\n  numeric: 70,\r\n  latitude: 44,\r\n  longitude: 18,\r\n},\r\n{\r\n  country: 'Botswana',\r\n  alpha2: 'BW',\r\n  alpha3: 'BWA',\r\n  numeric: 72,\r\n  latitude: -22,\r\n  longitude: 24,\r\n},\r\n{\r\n  country: 'Bouvet Island',\r\n  alpha2: 'BV',\r\n  alpha3: 'BVT',\r\n  numeric: 74,\r\n  latitude: -54.4333,\r\n  longitude: 3.4,\r\n},\r\n{\r\n  country: 'Brazil',\r\n  alpha2: 'BR',\r\n  alpha3: 'BRA',\r\n  numeric: 76,\r\n  latitude: -10,\r\n  longitude: -55,\r\n},\r\n{\r\n  country: 'British Indian Ocean Territory',\r\n  alpha2: 'IO',\r\n  alpha3: 'IOT',\r\n  numeric: 86,\r\n  latitude: -6,\r\n  longitude: 71.5,\r\n},\r\n{\r\n  country: 'Brunei Darussalam',\r\n  alpha2: 'BN',\r\n  alpha3: 'BRN',\r\n  numeric: 96,\r\n  latitude: 4.5,\r\n  longitude: 114.6667,\r\n},\r\n{\r\n  country: 'Bulgaria',\r\n  alpha2: 'BG',\r\n  alpha3: 'BGR',\r\n  numeric: 100,\r\n  latitude: 43,\r\n  longitude: 25,\r\n},\r\n{\r\n  country: 'Burkina Faso',\r\n  alpha2: 'BF',\r\n  alpha3: 'BFA',\r\n  numeric: 854,\r\n  latitude: 13,\r\n  longitude: -2,\r\n},\r\n{\r\n  country: 'Burundi',\r\n  alpha2: 'BI',\r\n  alpha3: 'BDI',\r\n  numeric: 108,\r\n  latitude: -3.5,\r\n  longitude: 30,\r\n},\r\n{\r\n  country: 'Cambodia',\r\n  alpha2: 'KH',\r\n  alpha3: 'KHM',\r\n  numeric: 116,\r\n  latitude: 13,\r\n  longitude: 105,\r\n},\r\n{\r\n  country: 'Cameroon',\r\n  alpha2: 'CM',\r\n  alpha3: 'CMR',\r\n  numeric: 120,\r\n  latitude: 6,\r\n  longitude: 12,\r\n},\r\n{\r\n  country: 'Canada',\r\n  alpha2: 'CA',\r\n  alpha3: 'CAN',\r\n  numeric: 124,\r\n  latitude: 60,\r\n  longitude: -95,\r\n},\r\n{\r\n  country: 'Cape Verde',\r\n  alpha2: 'CV',\r\n  alpha3: 'CPV',\r\n  numeric: 132,\r\n  latitude: 16,\r\n  longitude: -24,\r\n},\r\n{\r\n  country: 'Cayman Islands',\r\n  alpha2: 'KY',\r\n  alpha3: 'CYM',\r\n  numeric: 136,\r\n  latitude: 19.5,\r\n  longitude: -80.5,\r\n},\r\n{\r\n  country: 'Central African Republic',\r\n  alpha2: 'CF',\r\n  alpha3: 'CAF',\r\n  numeric: 140,\r\n  latitude: 7,\r\n  longitude: 21,\r\n},\r\n{\r\n  country: 'Chad',\r\n  alpha2: 'TD',\r\n  alpha3: 'TCD',\r\n  numeric: 148,\r\n  latitude: 15,\r\n  longitude: 19,\r\n},\r\n{\r\n  country: 'Chile',\r\n  alpha2: 'CL',\r\n  alpha3: 'CHL',\r\n  numeric: 152,\r\n  latitude: -30,\r\n  longitude: -71,\r\n},\r\n{\r\n  country: 'China',\r\n  alpha2: 'CN',\r\n  alpha3: 'CHN',\r\n  numeric: 156,\r\n  latitude: 35,\r\n  longitude: 105,\r\n},\r\n{\r\n  country: 'Christmas Island',\r\n  alpha2: 'CX',\r\n  alpha3: 'CXR',\r\n  numeric: 162,\r\n  latitude: -10.5,\r\n  longitude: 105.6667,\r\n},\r\n{\r\n  country: 'Cocos (Keeling) Islands',\r\n  alpha2: 'CC',\r\n  alpha3: 'CCK',\r\n  numeric: 166,\r\n  latitude: -12.5,\r\n  longitude: 96.8333,\r\n},\r\n{\r\n  country: 'Colombia',\r\n  alpha2: 'CO',\r\n  alpha3: 'COL',\r\n  numeric: 170,\r\n  latitude: 4,\r\n  longitude: -72,\r\n},\r\n{\r\n  country: 'Comoros',\r\n  alpha2: 'KM',\r\n  alpha3: 'COM',\r\n  numeric: 174,\r\n  latitude: -12.1667,\r\n  longitude: 44.25,\r\n},\r\n{\r\n  country: 'Congo (Brazzaville)',\r\n  alpha2: 'CG',\r\n  alpha3: 'COG',\r\n  numeric: 178,\r\n  latitude: -1,\r\n  longitude: 15,\r\n},\r\n{\r\n  country: 'Congo (Kinshasa)',\r\n  alpha2: 'CD',\r\n  alpha3: 'COD',\r\n  numeric: 180,\r\n  latitude: 0,\r\n  longitude: 25,\r\n},\r\n{\r\n  country: 'Cook Islands',\r\n  alpha2: 'CK',\r\n  alpha3: 'COK',\r\n  numeric: 184,\r\n  latitude: -21.2333,\r\n  longitude: -159.7667,\r\n},\r\n{\r\n  country: 'Costa Rica',\r\n  alpha2: 'CR',\r\n  alpha3: 'CRI',\r\n  numeric: 188,\r\n  latitude: 10,\r\n  longitude: -84,\r\n},\r\n{\r\n  country: \"Côte d'Ivoire\",\r\n  alpha2: 'CI',\r\n  alpha3: 'CIV',\r\n  numeric: 384,\r\n  latitude: 8,\r\n  longitude: -5,\r\n},\r\n{\r\n  country: 'Croatia',\r\n  alpha2: 'HR',\r\n  alpha3: 'HRV',\r\n  numeric: 191,\r\n  latitude: 45.1667,\r\n  longitude: 15.5,\r\n},\r\n{\r\n  country: 'Cuba',\r\n  alpha2: 'CU',\r\n  alpha3: 'CUB',\r\n  numeric: 192,\r\n  latitude: 21.5,\r\n  longitude: -80,\r\n},\r\n{\r\n  country: 'Cyprus',\r\n  alpha2: 'CY',\r\n  alpha3: 'CYP',\r\n  numeric: 196,\r\n  latitude: 35,\r\n  longitude: 33,\r\n},\r\n{\r\n  country: 'Czech Republic',\r\n  alpha2: 'CZ',\r\n  alpha3: 'CZE',\r\n  numeric: 203,\r\n  latitude: 49.75,\r\n  longitude: 15.5,\r\n},\r\n{\r\n  country: 'Denmark',\r\n  alpha2: 'DK',\r\n  alpha3: 'DNK',\r\n  numeric: 208,\r\n  latitude: 56,\r\n  longitude: 10,\r\n},\r\n{\r\n  country: 'Djibouti',\r\n  alpha2: 'DJ',\r\n  alpha3: 'DJI',\r\n  numeric: 262,\r\n  latitude: 11.5,\r\n  longitude: 43,\r\n},\r\n{\r\n  country: 'Dominica',\r\n  alpha2: 'DM',\r\n  alpha3: 'DMA',\r\n  numeric: 212,\r\n  latitude: 15.4167,\r\n  longitude: -61.3333,\r\n},\r\n{\r\n  country: 'Dominican Republic',\r\n  alpha2: 'DO',\r\n  alpha3: 'DOM',\r\n  numeric: 214,\r\n  latitude: 19,\r\n  longitude: -70.6667,\r\n},\r\n{\r\n  country: 'Ecuador',\r\n  alpha2: 'EC',\r\n  alpha3: 'ECU',\r\n  numeric: 218,\r\n  latitude: -2,\r\n  longitude: -77.5,\r\n},\r\n{\r\n  country: 'Egypt',\r\n  alpha2: 'EG',\r\n  alpha3: 'EGY',\r\n  numeric: 818,\r\n  latitude: 27,\r\n  longitude: 30,\r\n},\r\n{\r\n  country: 'El Salvador',\r\n  alpha2: 'SV',\r\n  alpha3: 'SLV',\r\n  numeric: 222,\r\n  latitude: 13.8333,\r\n  longitude: -88.9167,\r\n},\r\n{\r\n  country: 'Equatorial Guinea',\r\n  alpha2: 'GQ',\r\n  alpha3: 'GNQ',\r\n  numeric: 226,\r\n  latitude: 2,\r\n  longitude: 10,\r\n},\r\n{\r\n  country: 'Eritrea',\r\n  alpha2: 'ER',\r\n  alpha3: 'ERI',\r\n  numeric: 232,\r\n  latitude: 15,\r\n  longitude: 39,\r\n},\r\n{\r\n  country: 'Estonia',\r\n  alpha2: 'EE',\r\n  alpha3: 'EST',\r\n  numeric: 233,\r\n  latitude: 59,\r\n  longitude: 26,\r\n},\r\n{\r\n  country: 'Ethiopia',\r\n  alpha2: 'ET',\r\n  alpha3: 'ETH',\r\n  numeric: 231,\r\n  latitude: 8,\r\n  longitude: 38,\r\n},\r\n{\r\n  country: 'Falkland Islands (Malvinas)',\r\n  alpha2: 'FK',\r\n  alpha3: 'FLK',\r\n  numeric: 238,\r\n  latitude: -51.75,\r\n  longitude: -59,\r\n},\r\n{\r\n  country: 'Faroe Islands',\r\n  alpha2: 'FO',\r\n  alpha3: 'FRO',\r\n  numeric: 234,\r\n  latitude: 62,\r\n  longitude: -7,\r\n},\r\n{\r\n  country: 'Fiji',\r\n  alpha2: 'FJ',\r\n  alpha3: 'FJI',\r\n  numeric: 242,\r\n  latitude: -18,\r\n  longitude: 175,\r\n},\r\n{\r\n  country: 'Finland',\r\n  alpha2: 'FI',\r\n  alpha3: 'FIN',\r\n  numeric: 246,\r\n  latitude: 64,\r\n  longitude: 26,\r\n},\r\n{\r\n  country: 'France',\r\n  alpha2: 'FR',\r\n  alpha3: 'FRA',\r\n  numeric: 250,\r\n  latitude: 46,\r\n  longitude: 2,\r\n},\r\n{\r\n  country: 'French Guiana',\r\n  alpha2: 'GF',\r\n  alpha3: 'GUF',\r\n  numeric: 254,\r\n  latitude: 4,\r\n  longitude: -53,\r\n},\r\n{\r\n  country: 'French Polynesia',\r\n  alpha2: 'PF',\r\n  alpha3: 'PYF',\r\n  numeric: 258,\r\n  latitude: -15,\r\n  longitude: -140,\r\n},\r\n{\r\n  country: 'French Southern Territories',\r\n  alpha2: 'TF',\r\n  alpha3: 'ATF',\r\n  numeric: 260,\r\n  latitude: -43,\r\n  longitude: 67,\r\n},\r\n{\r\n  country: 'Gabon',\r\n  alpha2: 'GA',\r\n  alpha3: 'GAB',\r\n  numeric: 266,\r\n  latitude: -1,\r\n  longitude: 11.75,\r\n},\r\n{\r\n  country: 'Gambia',\r\n  alpha2: 'GM',\r\n  alpha3: 'GMB',\r\n  numeric: 270,\r\n  latitude: 13.4667,\r\n  longitude: -16.5667,\r\n},\r\n{\r\n  country: 'Georgia',\r\n  alpha2: 'GE',\r\n  alpha3: 'GEO',\r\n  numeric: 268,\r\n  latitude: 42,\r\n  longitude: 43.5,\r\n},\r\n{\r\n  country: 'Germany',\r\n  alpha2: 'DE',\r\n  alpha3: 'DEU',\r\n  numeric: 276,\r\n  latitude: 51,\r\n  longitude: 9,\r\n},\r\n{\r\n  country: 'Ghana',\r\n  alpha2: 'GH',\r\n  alpha3: 'GHA',\r\n  numeric: 288,\r\n  latitude: 8,\r\n  longitude: -2,\r\n},\r\n{\r\n  country: 'Gibraltar',\r\n  alpha2: 'GI',\r\n  alpha3: 'GIB',\r\n  numeric: 292,\r\n  latitude: 36.1833,\r\n  longitude: -5.3667,\r\n},\r\n{\r\n  country: 'Greece',\r\n  alpha2: 'GR',\r\n  alpha3: 'GRC',\r\n  numeric: 300,\r\n  latitude: 39,\r\n  longitude: 22,\r\n},\r\n{\r\n  country: 'Greenland',\r\n  alpha2: 'GL',\r\n  alpha3: 'GRL',\r\n  numeric: 304,\r\n  latitude: 72,\r\n  longitude: -40,\r\n},\r\n{\r\n  country: 'Grenada',\r\n  alpha2: 'GD',\r\n  alpha3: 'GRD',\r\n  numeric: 308,\r\n  latitude: 12.1167,\r\n  longitude: -61.6667,\r\n},\r\n{\r\n  country: 'Guadeloupe',\r\n  alpha2: 'GP',\r\n  alpha3: 'GLP',\r\n  numeric: 312,\r\n  latitude: 16.25,\r\n  longitude: -61.5833,\r\n},\r\n{\r\n  country: 'Guam',\r\n  alpha2: 'GU',\r\n  alpha3: 'GUM',\r\n  numeric: 316,\r\n  latitude: 13.4667,\r\n  longitude: 144.7833,\r\n},\r\n{\r\n  country: 'Guatemala',\r\n  alpha2: 'GT',\r\n  alpha3: 'GTM',\r\n  numeric: 320,\r\n  latitude: 15.5,\r\n  longitude: -90.25,\r\n},\r\n{\r\n  country: 'Guernsey',\r\n  alpha2: 'GG',\r\n  alpha3: 'GGY',\r\n  numeric: 831,\r\n  latitude: 49.5,\r\n  longitude: -2.56,\r\n},\r\n{\r\n  country: 'Guinea',\r\n  alpha2: 'GN',\r\n  alpha3: 'GIN',\r\n  numeric: 324,\r\n  latitude: 11,\r\n  longitude: -10,\r\n},\r\n{\r\n  country: 'Guinea-Bissau',\r\n  alpha2: 'GW',\r\n  alpha3: 'GNB',\r\n  numeric: 624,\r\n  latitude: 12,\r\n  longitude: -15,\r\n},\r\n{\r\n  country: 'Guyana',\r\n  alpha2: 'GY',\r\n  alpha3: 'GUY',\r\n  numeric: 328,\r\n  latitude: 5,\r\n  longitude: -59,\r\n},\r\n{\r\n  country: 'Haiti',\r\n  alpha2: 'HT',\r\n  alpha3: 'HTI',\r\n  numeric: 332,\r\n  latitude: 19,\r\n  longitude: -72.4167,\r\n},\r\n{\r\n  country: 'Heard Island and McDonald Islands',\r\n  alpha2: 'HM',\r\n  alpha3: 'HMD',\r\n  numeric: 334,\r\n  latitude: -53.1,\r\n  longitude: 72.5167,\r\n},\r\n{\r\n  country: 'Holy See (Vatican City State)',\r\n  alpha2: 'VA',\r\n  alpha3: 'VAT',\r\n  numeric: 336,\r\n  latitude: 41.9,\r\n  longitude: 12.45,\r\n},\r\n{\r\n  country: 'Honduras',\r\n  alpha2: 'HN',\r\n  alpha3: 'HND',\r\n  numeric: 340,\r\n  latitude: 15,\r\n  longitude: -86.5,\r\n},\r\n{\r\n  country: 'Hong Kong',\r\n  alpha2: 'HK',\r\n  alpha3: 'HKG',\r\n  numeric: 344,\r\n  latitude: 22.25,\r\n  longitude: 114.1667,\r\n},\r\n{\r\n  country: 'Hungary',\r\n  alpha2: 'HU',\r\n  alpha3: 'HUN',\r\n  numeric: 348,\r\n  latitude: 47,\r\n  longitude: 20,\r\n},\r\n{\r\n  country: 'Iceland',\r\n  alpha2: 'IS',\r\n  alpha3: 'ISL',\r\n  numeric: 352,\r\n  latitude: 65,\r\n  longitude: -18,\r\n},\r\n{\r\n  country: 'India',\r\n  alpha2: 'IN',\r\n  alpha3: 'IND',\r\n  numeric: 356,\r\n  latitude: 20,\r\n  longitude: 77,\r\n},\r\n{\r\n  country: 'Indonesia',\r\n  alpha2: 'ID',\r\n  alpha3: 'IDN',\r\n  numeric: 360,\r\n  latitude: -5,\r\n  longitude: 120,\r\n},\r\n{\r\n  country: 'Republic of Kosovo',\r\n  alpha2: 'KS',\r\n  alpha3: 'KOS',\r\n  numeric: 3620,\r\n  latitude: 42.6639,\r\n  longitude: 21.0961,\r\n},\r\n{\r\n  country: 'Iran, Islamic Republic of',\r\n  alpha2: 'IR',\r\n  alpha3: 'IRN',\r\n  numeric: 364,\r\n  latitude: 32,\r\n  longitude: 53,\r\n},\r\n{\r\n  country: 'Iraq',\r\n  alpha2: 'IQ',\r\n  alpha3: 'IRQ',\r\n  numeric: 368,\r\n  latitude: 33,\r\n  longitude: 44,\r\n},\r\n{\r\n  country: 'Ireland',\r\n  alpha2: 'IE',\r\n  alpha3: 'IRL',\r\n  numeric: 372,\r\n  latitude: 53,\r\n  longitude: -8,\r\n},\r\n{\r\n  country: 'Isle of Man',\r\n  alpha2: 'IM',\r\n  alpha3: 'IMN',\r\n  numeric: 833,\r\n  latitude: 54.23,\r\n  longitude: -4.55,\r\n},\r\n{\r\n  country: 'Israel',\r\n  alpha2: 'IL',\r\n  alpha3: 'ISR',\r\n  numeric: 376,\r\n  latitude: 31.5,\r\n  longitude: 34.75,\r\n},\r\n{\r\n  country: 'Italy',\r\n  alpha2: 'IT',\r\n  alpha3: 'ITA',\r\n  numeric: 380,\r\n  latitude: 42.8333,\r\n  longitude: 12.8333,\r\n},\r\n{\r\n  country: 'Jamaica',\r\n  alpha2: 'JM',\r\n  alpha3: 'JAM',\r\n  numeric: 388,\r\n  latitude: 18.25,\r\n  longitude: -77.5,\r\n},\r\n{\r\n  country: 'Japan',\r\n  alpha2: 'JP',\r\n  alpha3: 'JPN',\r\n  numeric: 392,\r\n  latitude: 36,\r\n  longitude: 138,\r\n},\r\n{\r\n  country: 'Jersey',\r\n  alpha2: 'JE',\r\n  alpha3: 'JEY',\r\n  numeric: 832,\r\n  latitude: 49.21,\r\n  longitude: -2.13,\r\n},\r\n{\r\n  country: 'Jordan',\r\n  alpha2: 'JO',\r\n  alpha3: 'JOR',\r\n  numeric: 400,\r\n  latitude: 31,\r\n  longitude: 36,\r\n},\r\n{\r\n  country: 'Kazakhstan',\r\n  alpha2: 'KZ',\r\n  alpha3: 'KAZ',\r\n  numeric: 398,\r\n  latitude: 48,\r\n  longitude: 68,\r\n},\r\n{\r\n  country: 'Kenya',\r\n  alpha2: 'KE',\r\n  alpha3: 'KEN',\r\n  numeric: 404,\r\n  latitude: 1,\r\n  longitude: 38,\r\n},\r\n{\r\n  country: 'Kiribati',\r\n  alpha2: 'KI',\r\n  alpha3: 'KIR',\r\n  numeric: 296,\r\n  latitude: 1.4167,\r\n  longitude: 173,\r\n},\r\n{\r\n  country: \"Korea, Democratic People's Republic of\",\r\n  alpha2: 'KP',\r\n  alpha3: 'PRK',\r\n  numeric: 408,\r\n  latitude: 40,\r\n  longitude: 127,\r\n},\r\n{\r\n  country: 'Korea (South)',\r\n  alpha2: 'KR',\r\n  alpha3: 'KOR',\r\n  numeric: 410,\r\n  latitude: 37,\r\n  longitude: 127.5,\r\n},\r\n{\r\n  country: 'Kuwait',\r\n  alpha2: 'KW',\r\n  alpha3: 'KWT',\r\n  numeric: 414,\r\n  latitude: 29.3375,\r\n  longitude: 47.6581,\r\n},\r\n{\r\n  country: 'Kyrgyzstan',\r\n  alpha2: 'KG',\r\n  alpha3: 'KGZ',\r\n  numeric: 417,\r\n  latitude: 41,\r\n  longitude: 75,\r\n},\r\n{\r\n  country: 'Lao PDR',\r\n  alpha2: 'LA',\r\n  alpha3: 'LAO',\r\n  numeric: 418,\r\n  latitude: 18,\r\n  longitude: 105,\r\n},\r\n{\r\n  country: 'Latvia',\r\n  alpha2: 'LV',\r\n  alpha3: 'LVA',\r\n  numeric: 428,\r\n  latitude: 57,\r\n  longitude: 25,\r\n},\r\n{\r\n  country: 'Lebanon',\r\n  alpha2: 'LB',\r\n  alpha3: 'LBN',\r\n  numeric: 422,\r\n  latitude: 33.8333,\r\n  longitude: 35.8333,\r\n},\r\n{\r\n  country: 'Lesotho',\r\n  alpha2: 'LS',\r\n  alpha3: 'LSO',\r\n  numeric: 426,\r\n  latitude: -29.5,\r\n  longitude: 28.5,\r\n},\r\n{\r\n  country: 'Liberia',\r\n  alpha2: 'LR',\r\n  alpha3: 'LBR',\r\n  numeric: 430,\r\n  latitude: 6.5,\r\n  longitude: -9.5,\r\n},\r\n{\r\n  country: 'Libya',\r\n  alpha2: 'LY',\r\n  alpha3: 'LBY',\r\n  numeric: 434,\r\n  latitude: 25,\r\n  longitude: 17,\r\n},\r\n{\r\n  country: 'Liechtenstein',\r\n  alpha2: 'LI',\r\n  alpha3: 'LIE',\r\n  numeric: 438,\r\n  latitude: 47.1667,\r\n  longitude: 9.5333,\r\n},\r\n{\r\n  country: 'Lithuania',\r\n  alpha2: 'LT',\r\n  alpha3: 'LTU',\r\n  numeric: 440,\r\n  latitude: 56,\r\n  longitude: 24,\r\n},\r\n{\r\n  country: 'Luxembourg',\r\n  alpha2: 'LU',\r\n  alpha3: 'LUX',\r\n  numeric: 442,\r\n  latitude: 49.75,\r\n  longitude: 6.1667,\r\n},\r\n{\r\n  country: 'Macao, SAR China',\r\n  alpha2: 'MO',\r\n  alpha3: 'MAC',\r\n  numeric: 446,\r\n  latitude: 22.1667,\r\n  longitude: 113.55,\r\n},\r\n{\r\n  country: 'Macedonia, Republic of',\r\n  alpha2: 'MK',\r\n  alpha3: 'MKD',\r\n  numeric: 807,\r\n  latitude: 41.8333,\r\n  longitude: 22,\r\n},\r\n{\r\n  country: 'Madagascar',\r\n  alpha2: 'MG',\r\n  alpha3: 'MDG',\r\n  numeric: 450,\r\n  latitude: -20,\r\n  longitude: 47,\r\n},\r\n{\r\n  country: 'Malawi',\r\n  alpha2: 'MW',\r\n  alpha3: 'MWI',\r\n  numeric: 454,\r\n  latitude: -13.5,\r\n  longitude: 34,\r\n},\r\n{\r\n  country: 'Malaysia',\r\n  alpha2: 'MY',\r\n  alpha3: 'MYS',\r\n  numeric: 458,\r\n  latitude: 2.5,\r\n  longitude: 112.5,\r\n},\r\n{\r\n  country: 'Maldives',\r\n  alpha2: 'MV',\r\n  alpha3: 'MDV',\r\n  numeric: 462,\r\n  latitude: 3.25,\r\n  longitude: 73,\r\n},\r\n{\r\n  country: 'Mali',\r\n  alpha2: 'ML',\r\n  alpha3: 'MLI',\r\n  numeric: 466,\r\n  latitude: 17,\r\n  longitude: -4,\r\n},\r\n{\r\n  country: 'Malta',\r\n  alpha2: 'MT',\r\n  alpha3: 'MLT',\r\n  numeric: 470,\r\n  latitude: 35.8333,\r\n  longitude: 14.5833,\r\n},\r\n{\r\n  country: 'Marshall Islands',\r\n  alpha2: 'MH',\r\n  alpha3: 'MHL',\r\n  numeric: 584,\r\n  latitude: 9,\r\n  longitude: 168,\r\n},\r\n{\r\n  country: 'Martinique',\r\n  alpha2: 'MQ',\r\n  alpha3: 'MTQ',\r\n  numeric: 474,\r\n  latitude: 14.6667,\r\n  longitude: -61,\r\n},\r\n{\r\n  country: 'Mauritania',\r\n  alpha2: 'MR',\r\n  alpha3: 'MRT',\r\n  numeric: 478,\r\n  latitude: 20,\r\n  longitude: -12,\r\n},\r\n{\r\n  country: 'Mauritius',\r\n  alpha2: 'MU',\r\n  alpha3: 'MUS',\r\n  numeric: 480,\r\n  latitude: -20.2833,\r\n  longitude: 57.55,\r\n},\r\n{\r\n  country: 'Mayotte',\r\n  alpha2: 'YT',\r\n  alpha3: 'MYT',\r\n  numeric: 175,\r\n  latitude: -12.8333,\r\n  longitude: 45.1667,\r\n},\r\n{\r\n  country: 'Mexico',\r\n  alpha2: 'MX',\r\n  alpha3: 'MEX',\r\n  numeric: 484,\r\n  latitude: 23,\r\n  longitude: -102,\r\n},\r\n{\r\n  country: 'Micronesia, Federated States of',\r\n  alpha2: 'FM',\r\n  alpha3: 'FSM',\r\n  numeric: 583,\r\n  latitude: 6.9167,\r\n  longitude: 158.25,\r\n},\r\n{\r\n  country: 'Moldova',\r\n  alpha2: 'MD',\r\n  alpha3: 'MDA',\r\n  numeric: 498,\r\n  latitude: 47,\r\n  longitude: 29,\r\n},\r\n{\r\n  country: 'Monaco',\r\n  alpha2: 'MC',\r\n  alpha3: 'MCO',\r\n  numeric: 492,\r\n  latitude: 43.7333,\r\n  longitude: 7.4,\r\n},\r\n{\r\n  country: 'Mongolia',\r\n  alpha2: 'MN',\r\n  alpha3: 'MNG',\r\n  numeric: 496,\r\n  latitude: 46,\r\n  longitude: 105,\r\n},\r\n{\r\n  country: 'Montenegro',\r\n  alpha2: 'ME',\r\n  alpha3: 'MNE',\r\n  numeric: 499,\r\n  latitude: 42,\r\n  longitude: 19,\r\n},\r\n{\r\n  country: 'Montserrat',\r\n  alpha2: 'MS',\r\n  alpha3: 'MSR',\r\n  numeric: 500,\r\n  latitude: 16.75,\r\n  longitude: -62.2,\r\n},\r\n{\r\n  country: 'Morocco',\r\n  alpha2: 'MA',\r\n  alpha3: 'MAR',\r\n  numeric: 504,\r\n  latitude: 32,\r\n  longitude: -5,\r\n},\r\n{\r\n  country: 'Mozambique',\r\n  alpha2: 'MZ',\r\n  alpha3: 'MOZ',\r\n  numeric: 508,\r\n  latitude: -18.25,\r\n  longitude: 35,\r\n},\r\n{\r\n  country: 'Myanmar',\r\n  alpha2: 'MM',\r\n  alpha3: 'MMR',\r\n  numeric: 104,\r\n  latitude: 22,\r\n  longitude: 98,\r\n},\r\n{\r\n  country: 'Namibia',\r\n  alpha2: 'NA',\r\n  alpha3: 'NAM',\r\n  numeric: 516,\r\n  latitude: -22,\r\n  longitude: 17,\r\n},\r\n{\r\n  country: 'Nauru',\r\n  alpha2: 'NR',\r\n  alpha3: 'NRU',\r\n  numeric: 520,\r\n  latitude: -0.5333,\r\n  longitude: 166.9167,\r\n},\r\n{\r\n  country: 'Nepal',\r\n  alpha2: 'NP',\r\n  alpha3: 'NPL',\r\n  numeric: 524,\r\n  latitude: 28,\r\n  longitude: 84,\r\n},\r\n{\r\n  country: 'Netherlands',\r\n  alpha2: 'NL',\r\n  alpha3: 'NLD',\r\n  numeric: 528,\r\n  latitude: 52.5,\r\n  longitude: 5.75,\r\n},\r\n{\r\n  country: 'Netherlands Antilles',\r\n  alpha2: 'AN',\r\n  alpha3: 'ANT',\r\n  numeric: 530,\r\n  latitude: 12.25,\r\n  longitude: -68.75,\r\n},\r\n{\r\n  country: 'New Caledonia',\r\n  alpha2: 'NC',\r\n  alpha3: 'NCL',\r\n  numeric: 540,\r\n  latitude: -21.5,\r\n  longitude: 165.5,\r\n},\r\n{\r\n  country: 'New Zealand',\r\n  alpha2: 'NZ',\r\n  alpha3: 'NZL',\r\n  numeric: 554,\r\n  latitude: -41,\r\n  longitude: 174,\r\n},\r\n{\r\n  country: 'Nicaragua',\r\n  alpha2: 'NI',\r\n  alpha3: 'NIC',\r\n  numeric: 558,\r\n  latitude: 13,\r\n  longitude: -85,\r\n},\r\n{\r\n  country: 'Niger',\r\n  alpha2: 'NE',\r\n  alpha3: 'NER',\r\n  numeric: 562,\r\n  latitude: 16,\r\n  longitude: 8,\r\n},\r\n{\r\n  country: 'Nigeria',\r\n  alpha2: 'NG',\r\n  alpha3: 'NGA',\r\n  numeric: 566,\r\n  latitude: 10,\r\n  longitude: 8,\r\n},\r\n{\r\n  country: 'Niue',\r\n  alpha2: 'NU',\r\n  alpha3: 'NIU',\r\n  numeric: 570,\r\n  latitude: -19.0333,\r\n  longitude: -169.8667,\r\n},\r\n{\r\n  country: 'Norfolk Island',\r\n  alpha2: 'NF',\r\n  alpha3: 'NFK',\r\n  numeric: 574,\r\n  latitude: -29.0333,\r\n  longitude: 167.95,\r\n},\r\n{\r\n  country: 'Northern Mariana Islands',\r\n  alpha2: 'MP',\r\n  alpha3: 'MNP',\r\n  numeric: 580,\r\n  latitude: 15.2,\r\n  longitude: 145.75,\r\n},\r\n{\r\n  country: 'Norway',\r\n  alpha2: 'NO',\r\n  alpha3: 'NOR',\r\n  numeric: 578,\r\n  latitude: 62,\r\n  longitude: 10,\r\n},\r\n{\r\n  country: 'Oman',\r\n  alpha2: 'OM',\r\n  alpha3: 'OMN',\r\n  numeric: 512,\r\n  latitude: 21,\r\n  longitude: 57,\r\n},\r\n{\r\n  country: 'Pakistan',\r\n  alpha2: 'PK',\r\n  alpha3: 'PAK',\r\n  numeric: 586,\r\n  latitude: 30,\r\n  longitude: 70,\r\n},\r\n{\r\n  country: 'Palau',\r\n  alpha2: 'PW',\r\n  alpha3: 'PLW',\r\n  numeric: 585,\r\n  latitude: 7.5,\r\n  longitude: 134.5,\r\n},\r\n{\r\n  country: 'Palestinian Territory',\r\n  alpha2: 'PS',\r\n  alpha3: 'PSE',\r\n  numeric: 275,\r\n  latitude: 32,\r\n  longitude: 35.25,\r\n},\r\n{\r\n  country: 'Panama',\r\n  alpha2: 'PA',\r\n  alpha3: 'PAN',\r\n  numeric: 591,\r\n  latitude: 9,\r\n  longitude: -80,\r\n},\r\n{\r\n  country: 'Papua New Guinea',\r\n  alpha2: 'PG',\r\n  alpha3: 'PNG',\r\n  numeric: 598,\r\n  latitude: -6,\r\n  longitude: 147,\r\n},\r\n{\r\n  country: 'Paraguay',\r\n  alpha2: 'PY',\r\n  alpha3: 'PRY',\r\n  numeric: 600,\r\n  latitude: -23,\r\n  longitude: -58,\r\n},\r\n{\r\n  country: 'Peru',\r\n  alpha2: 'PE',\r\n  alpha3: 'PER',\r\n  numeric: 604,\r\n  latitude: -10,\r\n  longitude: -76,\r\n},\r\n{\r\n  country: 'Philippines',\r\n  alpha2: 'PH',\r\n  alpha3: 'PHL',\r\n  numeric: 608,\r\n  latitude: 13,\r\n  longitude: 122,\r\n},\r\n{\r\n  country: 'Pitcairn',\r\n  alpha2: 'PN',\r\n  alpha3: 'PCN',\r\n  numeric: 612,\r\n  latitude: -24.7,\r\n  longitude: -127.4,\r\n},\r\n{\r\n  country: 'Poland',\r\n  alpha2: 'PL',\r\n  alpha3: 'POL',\r\n  numeric: 616,\r\n  latitude: 52,\r\n  longitude: 20,\r\n},\r\n{\r\n  country: 'Portugal',\r\n  alpha2: 'PT',\r\n  alpha3: 'PRT',\r\n  numeric: 620,\r\n  latitude: 39.5,\r\n  longitude: -8,\r\n},\r\n{\r\n  country: 'Puerto Rico',\r\n  alpha2: 'PR',\r\n  alpha3: 'PRI',\r\n  numeric: 630,\r\n  latitude: 18.25,\r\n  longitude: -66.5,\r\n},\r\n{\r\n  country: 'Qatar',\r\n  alpha2: 'QA',\r\n  alpha3: 'QAT',\r\n  numeric: 634,\r\n  latitude: 25.5,\r\n  longitude: 51.25,\r\n},\r\n{\r\n  country: 'Réunion',\r\n  alpha2: 'RE',\r\n  alpha3: 'REU',\r\n  numeric: 638,\r\n  latitude: -21.1,\r\n  longitude: 55.6,\r\n},\r\n{\r\n  country: 'Romania',\r\n  alpha2: 'RO',\r\n  alpha3: 'ROU',\r\n  numeric: 642,\r\n  latitude: 46,\r\n  longitude: 25,\r\n},\r\n{\r\n  country: 'Russian Federation',\r\n  alpha2: 'RU',\r\n  alpha3: 'RUS',\r\n  numeric: 643,\r\n  latitude: 60,\r\n  longitude: 100,\r\n},\r\n{\r\n  country: 'Rwanda',\r\n  alpha2: 'RW',\r\n  alpha3: 'RWA',\r\n  numeric: 646,\r\n  latitude: -2,\r\n  longitude: 30,\r\n},\r\n{\r\n  country: 'Saint Helena, Ascension and Tristan da Cunha',\r\n  alpha2: 'SH',\r\n  alpha3: 'SHN',\r\n  numeric: 654,\r\n  latitude: -15.9333,\r\n  longitude: -5.7,\r\n},\r\n{\r\n  country: 'Saint Kitts and Nevis',\r\n  alpha2: 'KN',\r\n  alpha3: 'KNA',\r\n  numeric: 659,\r\n  latitude: 17.3333,\r\n  longitude: -62.75,\r\n},\r\n{\r\n  country: 'Saint Lucia',\r\n  alpha2: 'LC',\r\n  alpha3: 'LCA',\r\n  numeric: 662,\r\n  latitude: 13.8833,\r\n  longitude: -61.1333,\r\n},\r\n{\r\n  country: 'Saint Pierre and Miquelon',\r\n  alpha2: 'PM',\r\n  alpha3: 'SPM',\r\n  numeric: 666,\r\n  latitude: 46.8333,\r\n  longitude: -56.3333,\r\n},\r\n{\r\n  country: 'Saint Vincent and Grenadines',\r\n  alpha2: 'VC',\r\n  alpha3: 'VCT',\r\n  numeric: 670,\r\n  latitude: 13.25,\r\n  longitude: -61.2,\r\n},\r\n{\r\n  country: 'Samoa',\r\n  alpha2: 'WS',\r\n  alpha3: 'WSM',\r\n  numeric: 882,\r\n  latitude: -13.5833,\r\n  longitude: -172.3333,\r\n},\r\n{\r\n  country: 'San Marino',\r\n  alpha2: 'SM',\r\n  alpha3: 'SMR',\r\n  numeric: 674,\r\n  latitude: 43.7667,\r\n  longitude: 12.4167,\r\n},\r\n{\r\n  country: 'Sao Tome and Principe',\r\n  alpha2: 'ST',\r\n  alpha3: 'STP',\r\n  numeric: 678,\r\n  latitude: 1,\r\n  longitude: 7,\r\n},\r\n{\r\n  country: 'Saudi Arabia',\r\n  alpha2: 'SA',\r\n  alpha3: 'SAU',\r\n  numeric: 682,\r\n  latitude: 25,\r\n  longitude: 45,\r\n},\r\n{\r\n  country: 'Senegal',\r\n  alpha2: 'SN',\r\n  alpha3: 'SEN',\r\n  numeric: 686,\r\n  latitude: 14,\r\n  longitude: -14,\r\n},\r\n{\r\n  country: 'Serbia',\r\n  alpha2: 'RS',\r\n  alpha3: 'SRB',\r\n  numeric: 688,\r\n  latitude: 44,\r\n  longitude: 21,\r\n},\r\n{\r\n  country: 'Seychelles',\r\n  alpha2: 'SC',\r\n  alpha3: 'SYC',\r\n  numeric: 690,\r\n  latitude: -4.5833,\r\n  longitude: 55.6667,\r\n},\r\n{\r\n  country: 'Sierra Leone',\r\n  alpha2: 'SL',\r\n  alpha3: 'SLE',\r\n  numeric: 694,\r\n  latitude: 8.5,\r\n  longitude: -11.5,\r\n},\r\n{\r\n  country: 'Singapore',\r\n  alpha2: 'SG',\r\n  alpha3: 'SGP',\r\n  numeric: 702,\r\n  latitude: 1.3667,\r\n  longitude: 103.8,\r\n},\r\n{\r\n  country: 'Slovakia',\r\n  alpha2: 'SK',\r\n  alpha3: 'SVK',\r\n  numeric: 703,\r\n  latitude: 48.6667,\r\n  longitude: 19.5,\r\n},\r\n{\r\n  country: 'Slovenia',\r\n  alpha2: 'SI',\r\n  alpha3: 'SVN',\r\n  numeric: 705,\r\n  latitude: 46,\r\n  longitude: 15,\r\n},\r\n{\r\n  country: 'Solomon Islands',\r\n  alpha2: 'SB',\r\n  alpha3: 'SLB',\r\n  numeric: 90,\r\n  latitude: -8,\r\n  longitude: 159,\r\n},\r\n{\r\n  country: 'Somalia',\r\n  alpha2: 'SO',\r\n  alpha3: 'SOM',\r\n  numeric: 706,\r\n  latitude: 10,\r\n  longitude: 49,\r\n},\r\n{\r\n  country: 'South Africa',\r\n  alpha2: 'ZA',\r\n  alpha3: 'ZAF',\r\n  numeric: 710,\r\n  latitude: -29,\r\n  longitude: 24,\r\n},\r\n{\r\n  country: 'South Georgia and the South Sandwich Islands',\r\n  alpha2: 'GS',\r\n  alpha3: 'SGS',\r\n  numeric: 239,\r\n  latitude: -54.5,\r\n  longitude: -37,\r\n},\r\n{\r\n  country: 'Spain',\r\n  alpha2: 'ES',\r\n  alpha3: 'ESP',\r\n  numeric: 724,\r\n  latitude: 40,\r\n  longitude: -4,\r\n},\r\n{\r\n  country: 'Sri Lanka',\r\n  alpha2: 'LK',\r\n  alpha3: 'LKA',\r\n  numeric: 144,\r\n  latitude: 7,\r\n  longitude: 81,\r\n},\r\n{\r\n  country: 'Sudan',\r\n  alpha2: 'SD',\r\n  alpha3: 'SDN',\r\n  numeric: 736,\r\n  latitude: 15,\r\n  longitude: 30,\r\n},\r\n{\r\n  country: 'South Sudan',\r\n  alpha2: 'SSD',\r\n  alpha3: 'SDN',\r\n  numeric: 7326,\r\n  latitude: 7.8627,\r\n  longitude: 29.6949,\r\n},\r\n{\r\n  country: 'Suriname',\r\n  alpha2: 'SR',\r\n  alpha3: 'SUR',\r\n  numeric: 740,\r\n  latitude: 4,\r\n  longitude: -56,\r\n},\r\n{\r\n  country: 'Svalbard and Jan Mayen',\r\n  alpha2: 'SJ',\r\n  alpha3: 'SJM',\r\n  numeric: 744,\r\n  latitude: 78,\r\n  longitude: 20,\r\n},\r\n{\r\n  country: 'Swaziland',\r\n  alpha2: 'SZ',\r\n  alpha3: 'SWZ',\r\n  numeric: 748,\r\n  latitude: -26.5,\r\n  longitude: 31.5,\r\n},\r\n{\r\n  country: 'Sweden',\r\n  alpha2: 'SE',\r\n  alpha3: 'SWE',\r\n  numeric: 752,\r\n  latitude: 62,\r\n  longitude: 15,\r\n},\r\n{\r\n  country: 'Switzerland',\r\n  alpha2: 'CH',\r\n  alpha3: 'CHE',\r\n  numeric: 756,\r\n  latitude: 47,\r\n  longitude: 8,\r\n},\r\n{\r\n  country: 'Syrian Arab Republic (Syria)',\r\n  alpha2: 'SY',\r\n  alpha3: 'SYR',\r\n  numeric: 760,\r\n  latitude: 35,\r\n  longitude: 38,\r\n},\r\n{\r\n  country: 'Taiwan, Republic of China',\r\n  alpha2: 'TW',\r\n  alpha3: 'TWN',\r\n  numeric: 158,\r\n  latitude: 23.5,\r\n  longitude: 121,\r\n},\r\n{\r\n  country: 'Tajikistan',\r\n  alpha2: 'TJ',\r\n  alpha3: 'TJK',\r\n  numeric: 762,\r\n  latitude: 39,\r\n  longitude: 71,\r\n},\r\n{\r\n  country: 'Tanzania, United Republic of',\r\n  alpha2: 'TZ',\r\n  alpha3: 'TZA',\r\n  numeric: 834,\r\n  latitude: -6,\r\n  longitude: 35,\r\n},\r\n{\r\n  country: 'Thailand',\r\n  alpha2: 'TH',\r\n  alpha3: 'THA',\r\n  numeric: 764,\r\n  latitude: 15,\r\n  longitude: 100,\r\n},\r\n{\r\n  country: 'Timor-Leste',\r\n  alpha2: 'TL',\r\n  alpha3: 'TLS',\r\n  numeric: 626,\r\n  latitude: -8.55,\r\n  longitude: 125.5167,\r\n},\r\n{\r\n  country: 'Togo',\r\n  alpha2: 'TG',\r\n  alpha3: 'TGO',\r\n  numeric: 768,\r\n  latitude: 8,\r\n  longitude: 1.1667,\r\n},\r\n{\r\n  country: 'Tokelau',\r\n  alpha2: 'TK',\r\n  alpha3: 'TKL',\r\n  numeric: 772,\r\n  latitude: -9,\r\n  longitude: -172,\r\n},\r\n{\r\n  country: 'Tonga',\r\n  alpha2: 'TO',\r\n  alpha3: 'TON',\r\n  numeric: 776,\r\n  latitude: -20,\r\n  longitude: -175,\r\n},\r\n{\r\n  country: 'Trinidad and Tobago',\r\n  alpha2: 'TT',\r\n  alpha3: 'TTO',\r\n  numeric: 780,\r\n  latitude: 11,\r\n  longitude: -61,\r\n},\r\n{\r\n  country: 'Tunisia',\r\n  alpha2: 'TN',\r\n  alpha3: 'TUN',\r\n  numeric: 788,\r\n  latitude: 34,\r\n  longitude: 9,\r\n},\r\n{\r\n  country: 'Turkey',\r\n  alpha2: 'TR',\r\n  alpha3: 'TUR',\r\n  numeric: 792,\r\n  latitude: 39,\r\n  longitude: 35,\r\n},\r\n{\r\n  country: 'Turkmenistan',\r\n  alpha2: 'TM',\r\n  alpha3: 'TKM',\r\n  numeric: 795,\r\n  latitude: 40,\r\n  longitude: 60,\r\n},\r\n{\r\n  country: 'Turks and Caicos Islands',\r\n  alpha2: 'TC',\r\n  alpha3: 'TCA',\r\n  numeric: 796,\r\n  latitude: 21.75,\r\n  longitude: -71.5833,\r\n},\r\n{\r\n  country: 'Tuvalu',\r\n  alpha2: 'TV',\r\n  alpha3: 'TUV',\r\n  numeric: 798,\r\n  latitude: -8,\r\n  longitude: 178,\r\n},\r\n{\r\n  country: 'Uganda',\r\n  alpha2: 'UG',\r\n  alpha3: 'UGA',\r\n  numeric: 800,\r\n  latitude: 1,\r\n  longitude: 32,\r\n},\r\n{\r\n  country: 'Ukraine',\r\n  alpha2: 'UA',\r\n  alpha3: 'UKR',\r\n  numeric: 804,\r\n  latitude: 49,\r\n  longitude: 32,\r\n},\r\n{\r\n  country: 'United Arab Emirates',\r\n  alpha2: 'AE',\r\n  alpha3: 'ARE',\r\n  numeric: 784,\r\n  latitude: 24,\r\n  longitude: 54,\r\n},\r\n{\r\n  country: 'United Kingdom',\r\n  alpha2: 'GB',\r\n  alpha3: 'GBR',\r\n  numeric: 826,\r\n  latitude: 54,\r\n  longitude: -2,\r\n},\r\n{\r\n  country: 'United States of America',\r\n  alpha2: 'US',\r\n  alpha3: 'USA',\r\n  numeric: 840,\r\n  latitude: 38,\r\n  longitude: -97,\r\n},\r\n{\r\n  country: 'United States Minor Outlying Islands',\r\n  alpha2: 'UM',\r\n  alpha3: 'UMI',\r\n  numeric: 581,\r\n  latitude: 19.2833,\r\n  longitude: 166.6,\r\n},\r\n{\r\n  country: 'Uruguay',\r\n  alpha2: 'UY',\r\n  alpha3: 'URY',\r\n  numeric: 858,\r\n  latitude: -33,\r\n  longitude: -56,\r\n},\r\n{\r\n  country: 'Uzbekistan',\r\n  alpha2: 'UZ',\r\n  alpha3: 'UZB',\r\n  numeric: 860,\r\n  latitude: 41,\r\n  longitude: 64,\r\n},\r\n{\r\n  country: 'Vanuatu',\r\n  alpha2: 'VU',\r\n  alpha3: 'VUT',\r\n  numeric: 548,\r\n  latitude: -16,\r\n  longitude: 167,\r\n},\r\n{\r\n  country: 'Venezuela (Bolivarian Republic)',\r\n  alpha2: 'VE',\r\n  alpha3: 'VEN',\r\n  numeric: 862,\r\n  latitude: 8,\r\n  longitude: -66,\r\n},\r\n{\r\n  country: 'Viet Nam',\r\n  alpha2: 'VN',\r\n  alpha3: 'VNM',\r\n  numeric: 704,\r\n  latitude: 16,\r\n  longitude: 106,\r\n},\r\n{\r\n  country: 'Virgin Islands, British',\r\n  alpha2: 'VG',\r\n  alpha3: 'VGB',\r\n  numeric: 92,\r\n  latitude: 18.5,\r\n  longitude: -64.5,\r\n},\r\n{\r\n  country: 'Virgin Islands, U.S.',\r\n  alpha2: 'VI',\r\n  alpha3: 'VIR',\r\n  numeric: 850,\r\n  latitude: 18.3333,\r\n  longitude: -64.8333,\r\n},\r\n{\r\n  country: 'Wallis and Futuna',\r\n  alpha2: 'WF',\r\n  alpha3: 'WLF',\r\n  numeric: 876,\r\n  latitude: -13.3,\r\n  longitude: -176.2,\r\n},\r\n{\r\n  country: 'Western Sahara',\r\n  alpha2: 'EH',\r\n  alpha3: 'ESH',\r\n  numeric: 732,\r\n  latitude: 24.5,\r\n  longitude: -13,\r\n},\r\n{\r\n  country: 'Yemen',\r\n  alpha2: 'YE',\r\n  alpha3: 'YEM',\r\n  numeric: 887,\r\n  latitude: 15,\r\n  longitude: 48,\r\n},\r\n{\r\n  country: 'Zambia',\r\n  alpha2: 'ZM',\r\n  alpha3: 'ZMB',\r\n  numeric: 894,\r\n  latitude: -15,\r\n  longitude: 30,\r\n},\r\n{\r\n  country: 'Zimbabwe',\r\n  alpha2: 'ZW',\r\n  alpha3: 'ZWE',\r\n  numeric: 716,\r\n  latitude: -20,\r\n  longitude: 30,\r\n},\r\n{\r\n  country: 'Afghanistan',\r\n  alpha2: 'AF',\r\n  alpha3: 'AFG',\r\n  numeric: 4,\r\n  latitude: 33,\r\n  longitude: 65,\r\n},\r\n];\r\n","addEventListener('load', initEventsDOM);\r\n\r\nfunction initEventsDOM() {\r\n  //open and close the window to full width\r\n  const listButtonOpen = document.querySelectorAll('.open');\r\n  listButtonOpen.forEach((item) => {\r\n    item.addEventListener('click', function(event) {\r\n      //define an object button\r\n      let target;\r\n      if(event.target.tagName === 'BUTTON') {\r\n        target = event.target;\r\n      };\r\n      if(event.target.tagName === 'I') {\r\n        target = event.target.parentElement;\r\n      };\r\n      const listHiddenModule = document.querySelectorAll('.wrap-data > div');\r\n      if(!target.classList.contains('close')) {\r\n        //hidden elements\r\n        listHiddenModule.forEach((item) => {\r\n          item.classList.toggle('window-hidden');\r\n        });\r\n        //element active full width\r\n        target.parentElement.parentElement.classList.toggle('full-width');\r\n        target.innerHTML = '<i class=\"material-icons\">close</i>';\r\n        target.classList.toggle('close');\r\n      } else {\r\n        //close the window that is full width\r\n        target.classList.toggle('close');\r\n        target.parentElement.parentElement.classList.toggle('full-width');\r\n        target.innerHTML = '<i class=\"material-icons\">zoom_out_map</i>';\r\n        listHiddenModule.forEach((item) => {\r\n          item.classList.toggle('window-hidden');\r\n        });\r\n      }\r\n    })\r\n  });\r\n\r\n  \r\n}\r\n","import { country_codes } from './country-codes';\r\n\r\nconst mapBox = 'pk.eyJ1IjoiZmVkb3JvdmljaHBhdmVsIiwiYSI6ImNraW5lcTkzMzBtMW8ycm81cTd6N3N3aDIifQ.botvkeUgOwWBdkRdCIwuWg';\r\n\r\nmapboxgl.accessToken = mapBox;\r\n\r\nconst map = new mapboxgl.Map({\r\n    container: 'map',\r\n    style: 'mapbox://styles/mapbox/dark-v10',\r\n    zoom: 0.5,\r\n    center: [50, 20],\r\n    scroll: false\r\n});\r\n//  MAP Fullscreen\r\n//map.addControl(new mapboxgl.FullscreenControl({ container: document.querySelector('map') }));\r\n\r\nconst latlongMap = new Map();\r\ncountry_codes.forEach((e) => latlongMap.set(e.country, [e.longitude, e.latitude]));\r\n\r\nconst getMarkColor = (x) => {\r\n    if (x <= 100) { return '#f6dddd'; }\r\n    if (x <= 1000) { return '#f4b5b5'; }\r\n    if (x <= 10000) { return '#fa8080'; }\r\n    if (x <= 100000) { return '#f84848'; }\r\n    return '#ae0000';\r\n};\r\n\r\nconst requestOptions = {\r\n    method: 'GET',\r\n    redirect: 'follow',\r\n};\r\n\r\n\r\n\r\nfetch('https://api.covid19api.com/summary', requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n\r\n\r\n        data.Countries.forEach((country) => {\r\n            const { TotalConfirmed, Country } = country;\r\n            const marker = document.createElement('div');\r\n            marker.className = 'marker';\r\n            marker.style.backgroundColor = getMarkColor(TotalConfirmed);\r\n            new mapboxgl.Marker({\r\n                    color: getMarkColor(TotalConfirmed),\r\n                    element: marker\r\n                })\r\n                .setLngLat(latlongMap.get(Country))\r\n                .setPopup(new mapboxgl.Popup({}).setHTML(`<strong>${Country}</strong>: confirmed ${TotalConfirmed}`))\r\n                .addTo(map);\r\n\r\n\r\n        });\r\n        const marker1 = document.querySelectorAll('.marker');\r\n        marker1.forEach((e, i) => e.addEventListener('click', () => {\r\n            map.flyTo({\r\n                center: latlongMap.get(data.Countries[i].Country),\r\n                zoom: 4,\r\n                essential: true\r\n            });\r\n        }));\r\n\r\n    })\r\n    .catch(() => new Error());","import { country_list } from './countries';\r\n\r\nconst searchCountry = document.querySelector('.pick__country')\r\nconst nameOfCountry = document.querySelector('.name')\r\nconst countryList = document.querySelector('.country-list')\r\nconst hideList = document.querySelector('.close')\r\nconst input = document.getElementById('search__country')\r\n\r\n\r\nfunction showAllCountries() {\r\n\tconst numberOfCountries = country_list.length;\r\n\r\n\tlet i = 0,\r\n\t\tchangeUlListId;\r\n\r\n\tcountry_list.forEach((country, index) => {\r\n\t\tif (index % Math.ceil(numberOfCountries / listsNumber) == 0) {\r\n\t\t\tchangeUlListId = `list-${i}`;\r\n\t\t\tcountryList.innerHTML += `<ul id='${changeUlListId}'></ul>`;\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tlet countryName = `${country.name}`;\r\n\t\tdocument.getElementById(`${changeUlListId}`).innerHTML += `\r\n\t\t<li onclick='fetchDataCountries(\"${country.name}\")' id=\"${country.name}\">\r\n\t\t${country.name}\r\n\t\t</li>\r\n\t\t`\r\n\r\n\t})\r\n};\r\nlet listsNumber = 3;\r\nshowAllCountries();\r\n\r\nhideList.addEventListener('click', () => {\r\n\tsearchCountry.classList.add('hide');\r\n});\r\nnameOfCountry.addEventListener('click', () => {\r\n\tinput.value = '';\r\n\tresetCountryList();\r\n\tsearchCountry.classList.toggle('hide');\r\n\tsearchCountry.classList.add('fadeIn');\r\n\tinput.focus();\r\n});\r\ncountryList.addEventListener('click', () => {\r\n\tsearchCountry.classList.toggle('hide');\r\n});\r\n\r\ninput.addEventListener('input', () => {\r\n\tlet value = input.value.toUpperCase();\r\n\r\n\tcountry_list.forEach(country => {\r\n\t\tif (country.name.toUpperCase().startsWith(value)) {\r\n\t\t\tdocument.getElementById(country.name).classList.remove('hide');\r\n\t\t} else {\r\n\t\t\tdocument.getElementById(country.name).classList.add('hide');\r\n\t\t}\r\n\t})\r\n})\r\n\r\nconst resetCountryList = () => {\r\n\tcountry_list.forEach(country => {\r\n\t\tdocument.getElementById(country.name).classList.remove('hide');\r\n\t})\r\n}\r\n\r\n// Work with api\r\nconst nameOFCountry = document.querySelector(\".country .name\");\r\nconst totalCasesValue = document.querySelector(\".total__cases .value\");\r\nconst newCasesValue = document.querySelector(\".total__cases .new-value\");\r\nconst recoveredValue = document.querySelector(\".recovered .value\");\r\nconst newRecoveredValue = document.querySelector(\".recovered .new-value\");\r\nconst deathsValue = document.querySelector(\".deaths .value\");\r\nconst newDeathsValue = document.querySelector(\".deaths .new-value\");\r\n\r\nconst ctx = document.getElementById(\"chart\").getContext(\"2d\");\r\n\r\nlet globalDataArr = [],\r\n\tcasesArr = [],\r\n\trecoveredArr = [],\r\n\tdeathsArr = [],\r\n\tdeaths = [],\r\n\tdates = [],\r\n\tdatesArr = [];\r\n\r\nlet codeOfCountry = geoplugin_countryCode(),\r\n\tyourCountry;\r\ncountry_list.forEach(country => {\r\n\tif (country.code === codeOfCountry) {\r\n\t\tyourCountry = country.name;\r\n\t}\r\n})\r\n\r\n\r\nfunction fetchDataCountries(country) {\r\n\tyourCountry = country;\r\n\tnameOFCountry.innerHTML = \"Loading...\";\r\n\r\n\t(casesArr = []),\r\n\t\t(recoveredArr = []),\r\n\t\t(deathsArr = []),\r\n\t\t(dates = []),\r\n\t\t(datesArr = []);\r\n\r\n\tlet requestVariation = {\r\n\t\tmethod: \"GET\",\r\n\t\tredirect: \"follow\",\r\n\t};\r\n\r\n\tconst fetchApi = async (country) => {\r\n\t\tawait fetch(\r\n\t\t\t`https://api.covid19api.com/total/country/${country}/status/confirmed`,\r\n\t\t\trequestVariation\r\n\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\treturn res.json();\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\tdata.forEach((item) => {\r\n\t\t\t\t\tdates.push(item.Date);\r\n\t\t\t\t\tcasesArr.push(item.Cases);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\tawait fetch(\r\n\t\t\t`https://api.covid19api.com/total/country/${country}/status/recovered`,\r\n\t\t\trequestVariation\r\n\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\treturn res.json();\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n\r\n\t\t\t\tdata.forEach((item) => {\r\n\t\t\t\t\trecoveredArr.push(item.Cases);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\tawait fetch(\r\n\t\t\t`https://api.covid19api.com/total/country/${country}/status/deaths`,\r\n\t\t\trequestVariation\r\n\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\treturn res.json();\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\tdata.forEach((item) => {\r\n\t\t\t\t\tdeathsArr.push(item.Cases);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\tupdateStatChart();\r\n\t};\r\n\r\n\tfetchApi(country);\r\n}\r\n\r\nfetchDataCountries(yourCountry);\r\n\r\n// Update Statistics and Chart\r\nfunction updateStatChart() {\r\n\tupdateStatistics();\r\n\tchartIt();\r\n}\r\n\r\nfunction updateStatistics() {\r\n\tconst totalCases = casesArr[casesArr.length - 1];\r\n\r\n\tconst newCases = totalCases - casesArr[casesArr.length - 2];\r\n\r\n\tconst totalRecovered = recoveredArr[recoveredArr.length - 1];\r\n\tconst newRecoveredCases =\r\n\t\ttotalRecovered - recoveredArr[recoveredArr.length - 2];\r\n\r\n\tconst totalDeaths = deathsArr[deathsArr.length - 1];\r\n\tconst newDeathsCases = totalDeaths - deathsArr[deathsArr.length - 2];\r\n\r\n\tnameOFCountry.innerHTML = yourCountry;\r\n\ttotalCasesValue.innerHTML = totalCases;\r\n\tnewCasesValue.innerHTML = `+${newCases}`;\r\n\trecoveredValue.innerHTML = totalRecovered;\r\n\tnewRecoveredValue.innerHTML = `+${newRecoveredCases}`;\r\n\tdeathsValue.innerHTML = totalDeaths;\r\n\tnewDeathsValue.innerHTML = `+${newDeathsCases}`;\r\n\r\n\t// format dates\r\n\tdates.forEach((date) => {\r\n\t\tdatesArr.push(formatDate(date));\r\n\t});\r\n}\r\n\r\n// UPDATE CHART\r\nlet chart;\r\n\r\nfunction chartIt() {\r\n\tif (chart) {\r\n\t\tchart.destroy();\r\n\t}\r\n\r\n\tchart = new Chart(ctx, {\r\n\t\ttype: \"line\",\r\n\t\tdata: {\r\n\t\t\tdatasets: [{\r\n\t\t\t\tpointBorderWidth: 1,\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t\tlabel: \"Cases\",\r\n\t\t\t\tdata: casesArr,\r\n\t\t\t\tfill: false,\r\n\t\t\t\tborderColor: \"hsl(288, 97%, 71%)\",\r\n\t\t\t\tbackgroundColor: \"hsl(288, 97%, 71%)\",\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Recovered\",\r\n\t\t\t\tdata: recoveredArr,\r\n\t\t\t\tfill: false,\r\n\t\t\t\tborderColor: \"hsl(106, 96%, 35%)\",\r\n\t\t\t\tbackgroundColor: \"hsl(106, 96%, 35%)\",\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Deaths\",\r\n\t\t\t\tdata: deathsArr,\r\n\t\t\t\tfill: false,\r\n\t\t\t\tborderColor: \"#8B0000\",\r\n\t\t\t\tbackgroundColor: \"#8B0000\",\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t\t],\r\n\t\t\tlabels: datesArr,\r\n\t\t},\r\n\t\toptions: {\r\n\t\t\telements: {\r\n\t\t\t\tline: {\r\n\t\t\t\t\ttension: 0 // disables bezier curves\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tresponsive: true,\r\n\t\t\tmaintainAspectRatio: false,\r\n\t\t\tlayout: {\r\n\t\t\t\tpadding: {\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\tright: 0,\r\n\t\t\t\t\ttop: 0,\r\n\t\t\t\t\tbottom: 0\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t});\r\n}\r\n\r\n\r\n\r\nfunction formatDate(dateString) {\r\n\tlet date = new Date(dateString);\r\n\tlet month = date.toString().slice(4, 7);\r\n\treturn `${date.getDate()} ${month}`;\r\n}","import './assets/js/map';\r\nimport './assets/js/app';\r\nimport './assets/js/main';\r\nimport './normalize.css';\r\nimport './style.css';\r\n\r\nimport './assets/js/country-codes';\r\nimport './assets/js/countries';\r\nimport './assets/js/script';","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/index.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}