{"version":3,"sources":["webpack://covid-dashboard/./src/normalize.css?dcfb","webpack://covid-dashboard/./src/style.css?fcc1","webpack://covid-dashboard/./src/assets/js/app.js","webpack://covid-dashboard/./src/assets/js/country-codes.js","webpack://covid-dashboard/./src/assets/js/main.js","webpack://covid-dashboard/./src/assets/js/map.js","webpack://covid-dashboard/./src/assets/js/script.js","webpack://covid-dashboard/./src/index.js","webpack://covid-dashboard/webpack/bootstrap","webpack://covid-dashboard/webpack/runtime/compat get default export","webpack://covid-dashboard/webpack/runtime/define property getters","webpack://covid-dashboard/webpack/runtime/hasOwnProperty shorthand","webpack://covid-dashboard/webpack/runtime/make namespace object","webpack://covid-dashboard/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,gBAAgB;AAC5D,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACxx6DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL,GAAG;;;AAGH;;;;;;;;;;;;;;ACtCgD;;AAEhD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,iEAAqB;;AAErB;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;;AAEA;AACA,mBAAmB,kBAAkB;AACrC,oBAAoB,kBAAkB;AACtC,qBAAqB,kBAAkB;AACvC,sBAAsB,kBAAkB;AACxC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;;AAET,KAAK;AACL,8B;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA,4BAA4B,EAAE;AAC9B,uCAAuC,eAAe;AACtD;AACA;AACA,6BAA6B,eAAe;AAC5C,qCAAqC,aAAa,UAAU,aAAa;AACzE,IAAI;AACJ;;AAEA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF,CAAC;;AAED;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;;AAEJ;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA,KAAK;AACL,IAAI;;AAEJ;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL,IAAI;;AAEJ;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA,mCAAmC,kBAAkB;AACrD;AACA,gCAAgC,eAAe;;AAE/C;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,WAAW,eAAe,GAAG,+BAA+B;AAC5D;;;;;;;;;;;;;;;;;;;;;;;;;ACxPyB;AACA;AACC;AACD;AACJ;;AAEO;AACO;;;;;;;UCRnC;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"script.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","//GLOBAL DATA\nlet objDataGlobal = {\n  totalConfirmed: 0,\n  totalRecovered: 0,\n  totalDeaths: 0,\n  newConfirmed: 0,\n  newRecovered: 0,\n  newDeaths: 0,\n  countries: []\n}\nlet data;\n\n//get data on page load\naddEventListener('load', getData);\n\n//get new data at 00:00 every day\nlet updateData = setInterval(function() {\n  const today = new Date();\n  const hour = today.getHours();\n  const min = today.getMinutes();\n  const sec = today.getSeconds();\n  if(hour === 0 && min === 0 && sec === 0) {getGlobalData(); setGlobalDataToLocal();}\n}, 1000);\n\n//function\nfunction getData() {\n  // if(localStorage.getItem('totalConfirmed') === undefined || localStorage.getItem('totalConfirmed') === '0') {\n  //   getGlobalData();\n  //   setGlobalDataToLocal();\n  // } else {\n  //   console.log('взято из памяти');\n  //   getDataGlobalFromLocal();\n  // }\n  const today = new Date();\n  const day = today.getDate();\n  const month = today.getMonth() + 1;\n  const year = today.getFullYear();\n\n  const hour = today.getHours();\n  const min = today.getMinutes();\n  const sec = today.getSeconds();\n  if(day < 10) {\n\t\tdocument.getElementById('dd').innerText = '0' + day;\n  } else document.getElementById('dd').innerText = day;\n  if(month < 10) {\n\t\tdocument.getElementById('mm').innerText = '0' + month;\n  } else document.getElementById('mm').innerText = month;\n  document.getElementById('yy').innerText = year;\n  if(hour < 10) {\n\t\tdocument.getElementById('hours').innerText = '0' + hour;\n\t\t} else document.getElementById('hours').innerText = hour;\n\tif(min < 10) {\n\t\tdocument.getElementById('minutes').innerText = '0' + min;\n\t\t} else document.getElementById('minutes').innerText = min;\n\n  getGlobalData();\n  // addToDOM();\n}\n\nasync function getGlobalData() {\n  const url = 'https://api.covid19api.com/summary';\n  const res = await fetch(url);\n  data = await res.json();\n  //get data global\n  objDataGlobal.totalConfirmed = data.Global.TotalConfirmed;\n  objDataGlobal.totalRecovered = data.Global.TotalRecovered;\n  objDataGlobal.totalDeaths = data.Global.TotalDeaths;\n  //get data last day\n  objDataGlobal.newConfirmed = data.Global.NewConfirmed;\n  objDataGlobal.newRecovered = data.Global.NewRecovered;\n  objDataGlobal.newDeaths = data.Global.NewDeaths;\n  //get data by country\n  objDataGlobal.countries = data.Countries;\n  addToDOM();\n}\n\nfunction setGlobalDataToLocal() {\n  //data last day and global\n  const totalConfirmed = objDataGlobal.totalConfirmed;\n  const totalRecovered = objDataGlobal.totalRecovered;\n  const totalDeaths = objDataGlobal.totalDeaths;\n  const newConfirmed = objDataGlobal.newConfirmed;\n  const newRecovered = objDataGlobal.newRecovered;\n  const newDeaths = objDataGlobal.newDeaths;\n  //save in LocalStorage\n\tlocalStorage.setItem('totalConfirmed', totalConfirmed);\n  localStorage.setItem('totalRecovered', totalRecovered);\n  localStorage.setItem('totalDeaths', totalDeaths);\n  localStorage.setItem('newConfirmed', newConfirmed);\n  localStorage.setItem('newRecovered', newRecovered);\n  localStorage.setItem('newDeaths', newDeaths);\n}\n\nfunction getDataGlobalFromLocal() {\n  //get data global\n  objDataGlobal.totalConfirmed = localStorage.getItem('totalConfirmed');\n  objDataGlobal.totalRecovered = localStorage.getItem('totalRecovered');\n  objDataGlobal.totalDeaths = localStorage.getItem('totalDeaths');\n  //get data last day\n  objDataGlobal.newConfirmed = localStorage.getItem('newConfirmed');\n  objDataGlobal.newRecovered = localStorage.getItem('newRecovered');\n  objDataGlobal.newDeaths = localStorage.getItem('newDeaths');\n}\n\nfunction addToDOM() {\n  const countPeopleAll = 7827000000;\n  const countPeople = countPeopleAll / 100000;\n  //data global per 100 thousand population\n  const totalConfirmedForPeople = Math.round(objDataGlobal.totalConfirmed / countPeople);\n  const totalRecoveredForPeople = Math.round(objDataGlobal.totalRecovered / countPeople);\n  const totalDeathsForPeople = Math.round(objDataGlobal.totalDeaths / countPeople);\n\n  //data last day per 100 thousand population\n  const newConfirmedForPeople = Math.round(objDataGlobal.newConfirmed / countPeople);\n  const newRecoveredForPeople = Math.round(objDataGlobal.newRecovered / countPeople);\n  const newDeathsForPeople = Math.round(objDataGlobal.newDeaths / countPeople);\n\n  arrData = [\n    [objDataGlobal.totalConfirmed, objDataGlobal.totalRecovered, objDataGlobal.totalDeaths, 'Global data for the world', '(absolute values)'],\n    [objDataGlobal.newConfirmed, objDataGlobal.newRecovered, objDataGlobal.newDeaths, 'Global data for the last day', '(absolute values)'],\n    [totalConfirmedForPeople, totalRecoveredForPeople , totalDeathsForPeople, 'Global data for the world', '(per 100 thousand population)'],\n    [newConfirmedForPeople, newRecoveredForPeople, newDeathsForPeople, 'Global data for the last day', '(per 100 thousand population)']\n  ];\n\n  //add data to DOM\n  let dataCases = document.querySelector('.data-cases p');\n  let dataRecovered = document.querySelector('.data-recovered p');\n  let dataDeaths = document.querySelector('.data-deaths p');\n  let headerWidget = document.querySelector('.global h3');\n  let headerWidgetNote = document.querySelector('.note');\n\n  //value default - global\n  const startIndex = 0;\n  addContentGlobalDate(startIndex);\n\n  //select other global data\n  selectData();\n  function selectData() {\n    let index = 0;\n    const next = document.querySelector('.next');\n    const prev = document.querySelector('.prev');\n    next.addEventListener('click', function() {\n      if(index === 3) {\n        index = 0;\n      } else {\n        index ++;\n      }\n      addContentGlobalDate(index);\n    });\n    prev.addEventListener('click', function() {\n      if(index === 0) {\n        index = 3;\n      } else {\n        index --;\n      }\n      addContentGlobalDate(index);\n    });\n  }\n  function addContentGlobalDate(index) {\n    dataCases.textContent = arrData[index][0].toLocaleString();\n    dataRecovered.textContent = arrData[index][1].toLocaleString();\n    dataDeaths.textContent = arrData[index][2].toLocaleString();\n    headerWidget.textContent = arrData[index][3].toLocaleString();\n    headerWidgetNote.textContent = arrData[index][4].toLocaleString();\n  }\n\n\n  //add list countries\n  let parentCountries = document.querySelector('.countries');\n  const countCountries = objDataGlobal.countries.length;\n  for (let i = 0; i < countCountries; i++) {\n    let itemList = document.createElement('li');\n    itemList.classList.add('item-country');\n    itemList.setAttribute('data-id', i);\n    parentCountries.appendChild(itemList);\n  }\n  let listCountries = document.querySelectorAll('.countries .item-country');\n  listCountries.forEach((item, i) => {\n    // item.setAttribute('data-id', objDataGlobal.countries[i].ID);\n    let arrWork = objDataGlobal.countries;\n    arrWork.sort((a, b) => b.TotalConfirmed - a.TotalConfirmed);\n    item.textContent = arrWork[i].Country;\n    const countForItem = document.createElement('span');\n    item.appendChild(countForItem);\n    countForItem.textContent = ' - ' + arrWork[i].TotalConfirmed.toLocaleString();\n  });\n\n\n  //get data by country for click\n  parentCountries.addEventListener('click', function(event) {\n    let target = event.target;\n    while(target !== parentCountries) {\n      if(target.tagName === 'LI') {\n          console.log(target);\n          const i = target.getAttribute('data-id');\n          console.log('ID - ', i);\n          viewDataForCountry(i);\n          return;\n      };\n      target = target.parentElement;\n    }\n  })\n\n  function viewDataForCountry(i) {\n    console.log(objDataGlobal.countries[i]);\n    let item = objDataGlobal.countries[i];\n\n    const countPeopleAll = 7827000000;\n    const countPeople = countPeopleAll / 100000;\n    //data global per 100 thousand population\n    const totalConfirmedForPeople = Math.round(item.TotalConfirmed / countPeople);\n    const totalRecoveredForPeople = Math.round(item.TotalRecovere / countPeople);\n    const totalDeathsForPeople = Math.round(item.TotalDeaths / countPeople);\n\n    //data last day per 100 thousand population\n    const newConfirmedForPeople = Math.round(objDataGlobal.newConfirmed / countPeople);\n    const newRecoveredForPeople = Math.round(objDataGlobal.newRecovered / countPeople);\n    const newDeathsForPeople = Math.round(objDataGlobal.newDeaths / countPeople);\n\n    arrData = [\n      [item.TotalConfirmed, item.TotalRecovered, item.TotalDeaths, 'Global data for the world', '(absolute values)'],\n      [item.NewConfirmed, item.NewRecovered, item.NewDeaths, 'Global data for the last day', '(absolute values)'],\n      [totalConfirmedForPeople, totalRecoveredForPeople , totalDeathsForPeople, 'Global data for the world', '(per 100 thousand population)'],\n      [newConfirmedForPeople, newRecoveredForPeople, newDeathsForPeople, 'Global data for the last day', '(per 100 thousand population)']\n    ];\n\n    const startIndex = 0;\n    addContentGlobalDate(startIndex);\n\n    //select other global data\n    selectData();\n  }\n}\n","export const country_codes = [{\n  country: 'Albania',\n  alpha2: 'AL',\n  alpha3: 'ALB',\n  numeric: 8,\n  latitude: 41,\n  longitude: 20,\n},\n{\n  country: 'Algeria',\n  alpha2: 'DZ',\n  alpha3: 'DZA',\n  numeric: 12,\n  latitude: 28,\n  longitude: 3,\n},\n{\n  country: 'American Samoa',\n  alpha2: 'AS',\n  alpha3: 'ASM',\n  numeric: 16,\n  latitude: -14.3333,\n  longitude: -170,\n},\n{\n  country: 'Andorra',\n  alpha2: 'AD',\n  alpha3: 'AND',\n  numeric: 20,\n  latitude: 42.5,\n  longitude: 1.6,\n},\n{\n  country: 'Angola',\n  alpha2: 'AO',\n  alpha3: 'AGO',\n  numeric: 24,\n  latitude: -12.5,\n  longitude: 18.5,\n},\n{\n  country: 'Anguilla',\n  alpha2: 'AI',\n  alpha3: 'AIA',\n  numeric: 660,\n  latitude: 18.25,\n  longitude: -63.1667,\n},\n{\n  country: 'Antarctica',\n  alpha2: 'AQ',\n  alpha3: 'ATA',\n  numeric: 10,\n  latitude: -90,\n  longitude: 0,\n},\n{\n  country: 'Antigua and Barbuda',\n  alpha2: 'AG',\n  alpha3: 'ATG',\n  numeric: 28,\n  latitude: 17.05,\n  longitude: -61.8,\n},\n{\n  country: 'Argentina',\n  alpha2: 'AR',\n  alpha3: 'ARG',\n  numeric: 32,\n  latitude: -34,\n  longitude: -64,\n},\n{\n  country: 'Armenia',\n  alpha2: 'AM',\n  alpha3: 'ARM',\n  numeric: 51,\n  latitude: 40,\n  longitude: 45,\n},\n{\n  country: 'Aruba',\n  alpha2: 'AW',\n  alpha3: 'ABW',\n  numeric: 533,\n  latitude: 12.5,\n  longitude: -69.9667,\n},\n{\n  country: 'Australia',\n  alpha2: 'AU',\n  alpha3: 'AUS',\n  numeric: 36,\n  latitude: -27,\n  longitude: 133,\n},\n{\n  country: 'Austria',\n  alpha2: 'AT',\n  alpha3: 'AUT',\n  numeric: 40,\n  latitude: 47.3333,\n  longitude: 13.3333,\n},\n{\n  country: 'Azerbaijan',\n  alpha2: 'AZ',\n  alpha3: 'AZE',\n  numeric: 31,\n  latitude: 40.5,\n  longitude: 47.5,\n},\n{\n  country: 'Bahamas',\n  alpha2: 'BS',\n  alpha3: 'BHS',\n  numeric: 44,\n  latitude: 24.25,\n  longitude: -76,\n},\n{\n  country: 'Bahrain',\n  alpha2: 'BH',\n  alpha3: 'BHR',\n  numeric: 48,\n  latitude: 26,\n  longitude: 50.55,\n},\n{\n  country: 'Bangladesh',\n  alpha2: 'BD',\n  alpha3: 'BGD',\n  numeric: 50,\n  latitude: 24,\n  longitude: 90,\n},\n{\n  country: 'Barbados',\n  alpha2: 'BB',\n  alpha3: 'BRB',\n  numeric: 52,\n  latitude: 13.1667,\n  longitude: -59.5333,\n},\n{\n  country: 'Belarus',\n  alpha2: 'BY',\n  alpha3: 'BLR',\n  numeric: 112,\n  latitude: 53,\n  longitude: 28,\n},\n{\n  country: 'Belgium',\n  alpha2: 'BE',\n  alpha3: 'BEL',\n  numeric: 56,\n  latitude: 50.8333,\n  longitude: 4,\n},\n{\n  country: 'Belize',\n  alpha2: 'BZ',\n  alpha3: 'BLZ',\n  numeric: 84,\n  latitude: 17.25,\n  longitude: -88.75,\n},\n{\n  country: 'Benin',\n  alpha2: 'BJ',\n  alpha3: 'BEN',\n  numeric: 204,\n  latitude: 9.5,\n  longitude: 2.25,\n},\n{\n  country: 'Bermuda',\n  alpha2: 'BM',\n  alpha3: 'BMU',\n  numeric: 60,\n  latitude: 32.3333,\n  longitude: -64.75,\n},\n{\n  country: 'Bhutan',\n  alpha2: 'BT',\n  alpha3: 'BTN',\n  numeric: 64,\n  latitude: 27.5,\n  longitude: 90.5,\n},\n{\n  country: 'Bolivia',\n  alpha2: 'BO',\n  alpha3: 'BOL',\n  numeric: 68,\n  latitude: -17,\n  longitude: -65,\n},\n{\n  country: 'Bosnia and Herzegovina',\n  alpha2: 'BA',\n  alpha3: 'BIH',\n  numeric: 70,\n  latitude: 44,\n  longitude: 18,\n},\n{\n  country: 'Botswana',\n  alpha2: 'BW',\n  alpha3: 'BWA',\n  numeric: 72,\n  latitude: -22,\n  longitude: 24,\n},\n{\n  country: 'Bouvet Island',\n  alpha2: 'BV',\n  alpha3: 'BVT',\n  numeric: 74,\n  latitude: -54.4333,\n  longitude: 3.4,\n},\n{\n  country: 'Brazil',\n  alpha2: 'BR',\n  alpha3: 'BRA',\n  numeric: 76,\n  latitude: -10,\n  longitude: -55,\n},\n{\n  country: 'British Indian Ocean Territory',\n  alpha2: 'IO',\n  alpha3: 'IOT',\n  numeric: 86,\n  latitude: -6,\n  longitude: 71.5,\n},\n{\n  country: 'Brunei Darussalam',\n  alpha2: 'BN',\n  alpha3: 'BRN',\n  numeric: 96,\n  latitude: 4.5,\n  longitude: 114.6667,\n},\n{\n  country: 'Bulgaria',\n  alpha2: 'BG',\n  alpha3: 'BGR',\n  numeric: 100,\n  latitude: 43,\n  longitude: 25,\n},\n{\n  country: 'Burkina Faso',\n  alpha2: 'BF',\n  alpha3: 'BFA',\n  numeric: 854,\n  latitude: 13,\n  longitude: -2,\n},\n{\n  country: 'Burundi',\n  alpha2: 'BI',\n  alpha3: 'BDI',\n  numeric: 108,\n  latitude: -3.5,\n  longitude: 30,\n},\n{\n  country: 'Cambodia',\n  alpha2: 'KH',\n  alpha3: 'KHM',\n  numeric: 116,\n  latitude: 13,\n  longitude: 105,\n},\n{\n  country: 'Cameroon',\n  alpha2: 'CM',\n  alpha3: 'CMR',\n  numeric: 120,\n  latitude: 6,\n  longitude: 12,\n},\n{\n  country: 'Canada',\n  alpha2: 'CA',\n  alpha3: 'CAN',\n  numeric: 124,\n  latitude: 60,\n  longitude: -95,\n},\n{\n  country: 'Cape Verde',\n  alpha2: 'CV',\n  alpha3: 'CPV',\n  numeric: 132,\n  latitude: 16,\n  longitude: -24,\n},\n{\n  country: 'Cayman Islands',\n  alpha2: 'KY',\n  alpha3: 'CYM',\n  numeric: 136,\n  latitude: 19.5,\n  longitude: -80.5,\n},\n{\n  country: 'Central African Republic',\n  alpha2: 'CF',\n  alpha3: 'CAF',\n  numeric: 140,\n  latitude: 7,\n  longitude: 21,\n},\n{\n  country: 'Chad',\n  alpha2: 'TD',\n  alpha3: 'TCD',\n  numeric: 148,\n  latitude: 15,\n  longitude: 19,\n},\n{\n  country: 'Chile',\n  alpha2: 'CL',\n  alpha3: 'CHL',\n  numeric: 152,\n  latitude: -30,\n  longitude: -71,\n},\n{\n  country: 'China',\n  alpha2: 'CN',\n  alpha3: 'CHN',\n  numeric: 156,\n  latitude: 35,\n  longitude: 105,\n},\n{\n  country: 'Christmas Island',\n  alpha2: 'CX',\n  alpha3: 'CXR',\n  numeric: 162,\n  latitude: -10.5,\n  longitude: 105.6667,\n},\n{\n  country: 'Cocos (Keeling) Islands',\n  alpha2: 'CC',\n  alpha3: 'CCK',\n  numeric: 166,\n  latitude: -12.5,\n  longitude: 96.8333,\n},\n{\n  country: 'Colombia',\n  alpha2: 'CO',\n  alpha3: 'COL',\n  numeric: 170,\n  latitude: 4,\n  longitude: -72,\n},\n{\n  country: 'Comoros',\n  alpha2: 'KM',\n  alpha3: 'COM',\n  numeric: 174,\n  latitude: -12.1667,\n  longitude: 44.25,\n},\n{\n  country: 'Congo (Brazzaville)',\n  alpha2: 'CG',\n  alpha3: 'COG',\n  numeric: 178,\n  latitude: -1,\n  longitude: 15,\n},\n{\n  country: 'Congo (Kinshasa)',\n  alpha2: 'CD',\n  alpha3: 'COD',\n  numeric: 180,\n  latitude: 0,\n  longitude: 25,\n},\n{\n  country: 'Cook Islands',\n  alpha2: 'CK',\n  alpha3: 'COK',\n  numeric: 184,\n  latitude: -21.2333,\n  longitude: -159.7667,\n},\n{\n  country: 'Costa Rica',\n  alpha2: 'CR',\n  alpha3: 'CRI',\n  numeric: 188,\n  latitude: 10,\n  longitude: -84,\n},\n{\n  country: \"Côte d'Ivoire\",\n  alpha2: 'CI',\n  alpha3: 'CIV',\n  numeric: 384,\n  latitude: 8,\n  longitude: -5,\n},\n{\n  country: 'Croatia',\n  alpha2: 'HR',\n  alpha3: 'HRV',\n  numeric: 191,\n  latitude: 45.1667,\n  longitude: 15.5,\n},\n{\n  country: 'Cuba',\n  alpha2: 'CU',\n  alpha3: 'CUB',\n  numeric: 192,\n  latitude: 21.5,\n  longitude: -80,\n},\n{\n  country: 'Cyprus',\n  alpha2: 'CY',\n  alpha3: 'CYP',\n  numeric: 196,\n  latitude: 35,\n  longitude: 33,\n},\n{\n  country: 'Czech Republic',\n  alpha2: 'CZ',\n  alpha3: 'CZE',\n  numeric: 203,\n  latitude: 49.75,\n  longitude: 15.5,\n},\n{\n  country: 'Denmark',\n  alpha2: 'DK',\n  alpha3: 'DNK',\n  numeric: 208,\n  latitude: 56,\n  longitude: 10,\n},\n{\n  country: 'Djibouti',\n  alpha2: 'DJ',\n  alpha3: 'DJI',\n  numeric: 262,\n  latitude: 11.5,\n  longitude: 43,\n},\n{\n  country: 'Dominica',\n  alpha2: 'DM',\n  alpha3: 'DMA',\n  numeric: 212,\n  latitude: 15.4167,\n  longitude: -61.3333,\n},\n{\n  country: 'Dominican Republic',\n  alpha2: 'DO',\n  alpha3: 'DOM',\n  numeric: 214,\n  latitude: 19,\n  longitude: -70.6667,\n},\n{\n  country: 'Ecuador',\n  alpha2: 'EC',\n  alpha3: 'ECU',\n  numeric: 218,\n  latitude: -2,\n  longitude: -77.5,\n},\n{\n  country: 'Egypt',\n  alpha2: 'EG',\n  alpha3: 'EGY',\n  numeric: 818,\n  latitude: 27,\n  longitude: 30,\n},\n{\n  country: 'El Salvador',\n  alpha2: 'SV',\n  alpha3: 'SLV',\n  numeric: 222,\n  latitude: 13.8333,\n  longitude: -88.9167,\n},\n{\n  country: 'Equatorial Guinea',\n  alpha2: 'GQ',\n  alpha3: 'GNQ',\n  numeric: 226,\n  latitude: 2,\n  longitude: 10,\n},\n{\n  country: 'Eritrea',\n  alpha2: 'ER',\n  alpha3: 'ERI',\n  numeric: 232,\n  latitude: 15,\n  longitude: 39,\n},\n{\n  country: 'Estonia',\n  alpha2: 'EE',\n  alpha3: 'EST',\n  numeric: 233,\n  latitude: 59,\n  longitude: 26,\n},\n{\n  country: 'Ethiopia',\n  alpha2: 'ET',\n  alpha3: 'ETH',\n  numeric: 231,\n  latitude: 8,\n  longitude: 38,\n},\n{\n  country: 'Falkland Islands (Malvinas)',\n  alpha2: 'FK',\n  alpha3: 'FLK',\n  numeric: 238,\n  latitude: -51.75,\n  longitude: -59,\n},\n{\n  country: 'Faroe Islands',\n  alpha2: 'FO',\n  alpha3: 'FRO',\n  numeric: 234,\n  latitude: 62,\n  longitude: -7,\n},\n{\n  country: 'Fiji',\n  alpha2: 'FJ',\n  alpha3: 'FJI',\n  numeric: 242,\n  latitude: -18,\n  longitude: 175,\n},\n{\n  country: 'Finland',\n  alpha2: 'FI',\n  alpha3: 'FIN',\n  numeric: 246,\n  latitude: 64,\n  longitude: 26,\n},\n{\n  country: 'France',\n  alpha2: 'FR',\n  alpha3: 'FRA',\n  numeric: 250,\n  latitude: 46,\n  longitude: 2,\n},\n{\n  country: 'French Guiana',\n  alpha2: 'GF',\n  alpha3: 'GUF',\n  numeric: 254,\n  latitude: 4,\n  longitude: -53,\n},\n{\n  country: 'French Polynesia',\n  alpha2: 'PF',\n  alpha3: 'PYF',\n  numeric: 258,\n  latitude: -15,\n  longitude: -140,\n},\n{\n  country: 'French Southern Territories',\n  alpha2: 'TF',\n  alpha3: 'ATF',\n  numeric: 260,\n  latitude: -43,\n  longitude: 67,\n},\n{\n  country: 'Gabon',\n  alpha2: 'GA',\n  alpha3: 'GAB',\n  numeric: 266,\n  latitude: -1,\n  longitude: 11.75,\n},\n{\n  country: 'Gambia',\n  alpha2: 'GM',\n  alpha3: 'GMB',\n  numeric: 270,\n  latitude: 13.4667,\n  longitude: -16.5667,\n},\n{\n  country: 'Georgia',\n  alpha2: 'GE',\n  alpha3: 'GEO',\n  numeric: 268,\n  latitude: 42,\n  longitude: 43.5,\n},\n{\n  country: 'Germany',\n  alpha2: 'DE',\n  alpha3: 'DEU',\n  numeric: 276,\n  latitude: 51,\n  longitude: 9,\n},\n{\n  country: 'Ghana',\n  alpha2: 'GH',\n  alpha3: 'GHA',\n  numeric: 288,\n  latitude: 8,\n  longitude: -2,\n},\n{\n  country: 'Gibraltar',\n  alpha2: 'GI',\n  alpha3: 'GIB',\n  numeric: 292,\n  latitude: 36.1833,\n  longitude: -5.3667,\n},\n{\n  country: 'Greece',\n  alpha2: 'GR',\n  alpha3: 'GRC',\n  numeric: 300,\n  latitude: 39,\n  longitude: 22,\n},\n{\n  country: 'Greenland',\n  alpha2: 'GL',\n  alpha3: 'GRL',\n  numeric: 304,\n  latitude: 72,\n  longitude: -40,\n},\n{\n  country: 'Grenada',\n  alpha2: 'GD',\n  alpha3: 'GRD',\n  numeric: 308,\n  latitude: 12.1167,\n  longitude: -61.6667,\n},\n{\n  country: 'Guadeloupe',\n  alpha2: 'GP',\n  alpha3: 'GLP',\n  numeric: 312,\n  latitude: 16.25,\n  longitude: -61.5833,\n},\n{\n  country: 'Guam',\n  alpha2: 'GU',\n  alpha3: 'GUM',\n  numeric: 316,\n  latitude: 13.4667,\n  longitude: 144.7833,\n},\n{\n  country: 'Guatemala',\n  alpha2: 'GT',\n  alpha3: 'GTM',\n  numeric: 320,\n  latitude: 15.5,\n  longitude: -90.25,\n},\n{\n  country: 'Guernsey',\n  alpha2: 'GG',\n  alpha3: 'GGY',\n  numeric: 831,\n  latitude: 49.5,\n  longitude: -2.56,\n},\n{\n  country: 'Guinea',\n  alpha2: 'GN',\n  alpha3: 'GIN',\n  numeric: 324,\n  latitude: 11,\n  longitude: -10,\n},\n{\n  country: 'Guinea-Bissau',\n  alpha2: 'GW',\n  alpha3: 'GNB',\n  numeric: 624,\n  latitude: 12,\n  longitude: -15,\n},\n{\n  country: 'Guyana',\n  alpha2: 'GY',\n  alpha3: 'GUY',\n  numeric: 328,\n  latitude: 5,\n  longitude: -59,\n},\n{\n  country: 'Haiti',\n  alpha2: 'HT',\n  alpha3: 'HTI',\n  numeric: 332,\n  latitude: 19,\n  longitude: -72.4167,\n},\n{\n  country: 'Heard Island and McDonald Islands',\n  alpha2: 'HM',\n  alpha3: 'HMD',\n  numeric: 334,\n  latitude: -53.1,\n  longitude: 72.5167,\n},\n{\n  country: 'Holy See (Vatican City State)',\n  alpha2: 'VA',\n  alpha3: 'VAT',\n  numeric: 336,\n  latitude: 41.9,\n  longitude: 12.45,\n},\n{\n  country: 'Honduras',\n  alpha2: 'HN',\n  alpha3: 'HND',\n  numeric: 340,\n  latitude: 15,\n  longitude: -86.5,\n},\n{\n  country: 'Hong Kong',\n  alpha2: 'HK',\n  alpha3: 'HKG',\n  numeric: 344,\n  latitude: 22.25,\n  longitude: 114.1667,\n},\n{\n  country: 'Hungary',\n  alpha2: 'HU',\n  alpha3: 'HUN',\n  numeric: 348,\n  latitude: 47,\n  longitude: 20,\n},\n{\n  country: 'Iceland',\n  alpha2: 'IS',\n  alpha3: 'ISL',\n  numeric: 352,\n  latitude: 65,\n  longitude: -18,\n},\n{\n  country: 'India',\n  alpha2: 'IN',\n  alpha3: 'IND',\n  numeric: 356,\n  latitude: 20,\n  longitude: 77,\n},\n{\n  country: 'Indonesia',\n  alpha2: 'ID',\n  alpha3: 'IDN',\n  numeric: 360,\n  latitude: -5,\n  longitude: 120,\n},\n{\n  country: 'Republic of Kosovo',\n  alpha2: 'KS',\n  alpha3: 'KOS',\n  numeric: 3620,\n  latitude: 42.6639,\n  longitude: 21.0961,\n},\n{\n  country: 'Iran, Islamic Republic of',\n  alpha2: 'IR',\n  alpha3: 'IRN',\n  numeric: 364,\n  latitude: 32,\n  longitude: 53,\n},\n{\n  country: 'Iraq',\n  alpha2: 'IQ',\n  alpha3: 'IRQ',\n  numeric: 368,\n  latitude: 33,\n  longitude: 44,\n},\n{\n  country: 'Ireland',\n  alpha2: 'IE',\n  alpha3: 'IRL',\n  numeric: 372,\n  latitude: 53,\n  longitude: -8,\n},\n{\n  country: 'Isle of Man',\n  alpha2: 'IM',\n  alpha3: 'IMN',\n  numeric: 833,\n  latitude: 54.23,\n  longitude: -4.55,\n},\n{\n  country: 'Israel',\n  alpha2: 'IL',\n  alpha3: 'ISR',\n  numeric: 376,\n  latitude: 31.5,\n  longitude: 34.75,\n},\n{\n  country: 'Italy',\n  alpha2: 'IT',\n  alpha3: 'ITA',\n  numeric: 380,\n  latitude: 42.8333,\n  longitude: 12.8333,\n},\n{\n  country: 'Jamaica',\n  alpha2: 'JM',\n  alpha3: 'JAM',\n  numeric: 388,\n  latitude: 18.25,\n  longitude: -77.5,\n},\n{\n  country: 'Japan',\n  alpha2: 'JP',\n  alpha3: 'JPN',\n  numeric: 392,\n  latitude: 36,\n  longitude: 138,\n},\n{\n  country: 'Jersey',\n  alpha2: 'JE',\n  alpha3: 'JEY',\n  numeric: 832,\n  latitude: 49.21,\n  longitude: -2.13,\n},\n{\n  country: 'Jordan',\n  alpha2: 'JO',\n  alpha3: 'JOR',\n  numeric: 400,\n  latitude: 31,\n  longitude: 36,\n},\n{\n  country: 'Kazakhstan',\n  alpha2: 'KZ',\n  alpha3: 'KAZ',\n  numeric: 398,\n  latitude: 48,\n  longitude: 68,\n},\n{\n  country: 'Kenya',\n  alpha2: 'KE',\n  alpha3: 'KEN',\n  numeric: 404,\n  latitude: 1,\n  longitude: 38,\n},\n{\n  country: 'Kiribati',\n  alpha2: 'KI',\n  alpha3: 'KIR',\n  numeric: 296,\n  latitude: 1.4167,\n  longitude: 173,\n},\n{\n  country: \"Korea, Democratic People's Republic of\",\n  alpha2: 'KP',\n  alpha3: 'PRK',\n  numeric: 408,\n  latitude: 40,\n  longitude: 127,\n},\n{\n  country: 'Korea (South)',\n  alpha2: 'KR',\n  alpha3: 'KOR',\n  numeric: 410,\n  latitude: 37,\n  longitude: 127.5,\n},\n{\n  country: 'Kuwait',\n  alpha2: 'KW',\n  alpha3: 'KWT',\n  numeric: 414,\n  latitude: 29.3375,\n  longitude: 47.6581,\n},\n{\n  country: 'Kyrgyzstan',\n  alpha2: 'KG',\n  alpha3: 'KGZ',\n  numeric: 417,\n  latitude: 41,\n  longitude: 75,\n},\n{\n  country: 'Lao PDR',\n  alpha2: 'LA',\n  alpha3: 'LAO',\n  numeric: 418,\n  latitude: 18,\n  longitude: 105,\n},\n{\n  country: 'Latvia',\n  alpha2: 'LV',\n  alpha3: 'LVA',\n  numeric: 428,\n  latitude: 57,\n  longitude: 25,\n},\n{\n  country: 'Lebanon',\n  alpha2: 'LB',\n  alpha3: 'LBN',\n  numeric: 422,\n  latitude: 33.8333,\n  longitude: 35.8333,\n},\n{\n  country: 'Lesotho',\n  alpha2: 'LS',\n  alpha3: 'LSO',\n  numeric: 426,\n  latitude: -29.5,\n  longitude: 28.5,\n},\n{\n  country: 'Liberia',\n  alpha2: 'LR',\n  alpha3: 'LBR',\n  numeric: 430,\n  latitude: 6.5,\n  longitude: -9.5,\n},\n{\n  country: 'Libya',\n  alpha2: 'LY',\n  alpha3: 'LBY',\n  numeric: 434,\n  latitude: 25,\n  longitude: 17,\n},\n{\n  country: 'Liechtenstein',\n  alpha2: 'LI',\n  alpha3: 'LIE',\n  numeric: 438,\n  latitude: 47.1667,\n  longitude: 9.5333,\n},\n{\n  country: 'Lithuania',\n  alpha2: 'LT',\n  alpha3: 'LTU',\n  numeric: 440,\n  latitude: 56,\n  longitude: 24,\n},\n{\n  country: 'Luxembourg',\n  alpha2: 'LU',\n  alpha3: 'LUX',\n  numeric: 442,\n  latitude: 49.75,\n  longitude: 6.1667,\n},\n{\n  country: 'Macao, SAR China',\n  alpha2: 'MO',\n  alpha3: 'MAC',\n  numeric: 446,\n  latitude: 22.1667,\n  longitude: 113.55,\n},\n{\n  country: 'Macedonia, Republic of',\n  alpha2: 'MK',\n  alpha3: 'MKD',\n  numeric: 807,\n  latitude: 41.8333,\n  longitude: 22,\n},\n{\n  country: 'Madagascar',\n  alpha2: 'MG',\n  alpha3: 'MDG',\n  numeric: 450,\n  latitude: -20,\n  longitude: 47,\n},\n{\n  country: 'Malawi',\n  alpha2: 'MW',\n  alpha3: 'MWI',\n  numeric: 454,\n  latitude: -13.5,\n  longitude: 34,\n},\n{\n  country: 'Malaysia',\n  alpha2: 'MY',\n  alpha3: 'MYS',\n  numeric: 458,\n  latitude: 2.5,\n  longitude: 112.5,\n},\n{\n  country: 'Maldives',\n  alpha2: 'MV',\n  alpha3: 'MDV',\n  numeric: 462,\n  latitude: 3.25,\n  longitude: 73,\n},\n{\n  country: 'Mali',\n  alpha2: 'ML',\n  alpha3: 'MLI',\n  numeric: 466,\n  latitude: 17,\n  longitude: -4,\n},\n{\n  country: 'Malta',\n  alpha2: 'MT',\n  alpha3: 'MLT',\n  numeric: 470,\n  latitude: 35.8333,\n  longitude: 14.5833,\n},\n{\n  country: 'Marshall Islands',\n  alpha2: 'MH',\n  alpha3: 'MHL',\n  numeric: 584,\n  latitude: 9,\n  longitude: 168,\n},\n{\n  country: 'Martinique',\n  alpha2: 'MQ',\n  alpha3: 'MTQ',\n  numeric: 474,\n  latitude: 14.6667,\n  longitude: -61,\n},\n{\n  country: 'Mauritania',\n  alpha2: 'MR',\n  alpha3: 'MRT',\n  numeric: 478,\n  latitude: 20,\n  longitude: -12,\n},\n{\n  country: 'Mauritius',\n  alpha2: 'MU',\n  alpha3: 'MUS',\n  numeric: 480,\n  latitude: -20.2833,\n  longitude: 57.55,\n},\n{\n  country: 'Mayotte',\n  alpha2: 'YT',\n  alpha3: 'MYT',\n  numeric: 175,\n  latitude: -12.8333,\n  longitude: 45.1667,\n},\n{\n  country: 'Mexico',\n  alpha2: 'MX',\n  alpha3: 'MEX',\n  numeric: 484,\n  latitude: 23,\n  longitude: -102,\n},\n{\n  country: 'Micronesia, Federated States of',\n  alpha2: 'FM',\n  alpha3: 'FSM',\n  numeric: 583,\n  latitude: 6.9167,\n  longitude: 158.25,\n},\n{\n  country: 'Moldova',\n  alpha2: 'MD',\n  alpha3: 'MDA',\n  numeric: 498,\n  latitude: 47,\n  longitude: 29,\n},\n{\n  country: 'Monaco',\n  alpha2: 'MC',\n  alpha3: 'MCO',\n  numeric: 492,\n  latitude: 43.7333,\n  longitude: 7.4,\n},\n{\n  country: 'Mongolia',\n  alpha2: 'MN',\n  alpha3: 'MNG',\n  numeric: 496,\n  latitude: 46,\n  longitude: 105,\n},\n{\n  country: 'Montenegro',\n  alpha2: 'ME',\n  alpha3: 'MNE',\n  numeric: 499,\n  latitude: 42,\n  longitude: 19,\n},\n{\n  country: 'Montserrat',\n  alpha2: 'MS',\n  alpha3: 'MSR',\n  numeric: 500,\n  latitude: 16.75,\n  longitude: -62.2,\n},\n{\n  country: 'Morocco',\n  alpha2: 'MA',\n  alpha3: 'MAR',\n  numeric: 504,\n  latitude: 32,\n  longitude: -5,\n},\n{\n  country: 'Mozambique',\n  alpha2: 'MZ',\n  alpha3: 'MOZ',\n  numeric: 508,\n  latitude: -18.25,\n  longitude: 35,\n},\n{\n  country: 'Myanmar',\n  alpha2: 'MM',\n  alpha3: 'MMR',\n  numeric: 104,\n  latitude: 22,\n  longitude: 98,\n},\n{\n  country: 'Namibia',\n  alpha2: 'NA',\n  alpha3: 'NAM',\n  numeric: 516,\n  latitude: -22,\n  longitude: 17,\n},\n{\n  country: 'Nauru',\n  alpha2: 'NR',\n  alpha3: 'NRU',\n  numeric: 520,\n  latitude: -0.5333,\n  longitude: 166.9167,\n},\n{\n  country: 'Nepal',\n  alpha2: 'NP',\n  alpha3: 'NPL',\n  numeric: 524,\n  latitude: 28,\n  longitude: 84,\n},\n{\n  country: 'Netherlands',\n  alpha2: 'NL',\n  alpha3: 'NLD',\n  numeric: 528,\n  latitude: 52.5,\n  longitude: 5.75,\n},\n{\n  country: 'Netherlands Antilles',\n  alpha2: 'AN',\n  alpha3: 'ANT',\n  numeric: 530,\n  latitude: 12.25,\n  longitude: -68.75,\n},\n{\n  country: 'New Caledonia',\n  alpha2: 'NC',\n  alpha3: 'NCL',\n  numeric: 540,\n  latitude: -21.5,\n  longitude: 165.5,\n},\n{\n  country: 'New Zealand',\n  alpha2: 'NZ',\n  alpha3: 'NZL',\n  numeric: 554,\n  latitude: -41,\n  longitude: 174,\n},\n{\n  country: 'Nicaragua',\n  alpha2: 'NI',\n  alpha3: 'NIC',\n  numeric: 558,\n  latitude: 13,\n  longitude: -85,\n},\n{\n  country: 'Niger',\n  alpha2: 'NE',\n  alpha3: 'NER',\n  numeric: 562,\n  latitude: 16,\n  longitude: 8,\n},\n{\n  country: 'Nigeria',\n  alpha2: 'NG',\n  alpha3: 'NGA',\n  numeric: 566,\n  latitude: 10,\n  longitude: 8,\n},\n{\n  country: 'Niue',\n  alpha2: 'NU',\n  alpha3: 'NIU',\n  numeric: 570,\n  latitude: -19.0333,\n  longitude: -169.8667,\n},\n{\n  country: 'Norfolk Island',\n  alpha2: 'NF',\n  alpha3: 'NFK',\n  numeric: 574,\n  latitude: -29.0333,\n  longitude: 167.95,\n},\n{\n  country: 'Northern Mariana Islands',\n  alpha2: 'MP',\n  alpha3: 'MNP',\n  numeric: 580,\n  latitude: 15.2,\n  longitude: 145.75,\n},\n{\n  country: 'Norway',\n  alpha2: 'NO',\n  alpha3: 'NOR',\n  numeric: 578,\n  latitude: 62,\n  longitude: 10,\n},\n{\n  country: 'Oman',\n  alpha2: 'OM',\n  alpha3: 'OMN',\n  numeric: 512,\n  latitude: 21,\n  longitude: 57,\n},\n{\n  country: 'Pakistan',\n  alpha2: 'PK',\n  alpha3: 'PAK',\n  numeric: 586,\n  latitude: 30,\n  longitude: 70,\n},\n{\n  country: 'Palau',\n  alpha2: 'PW',\n  alpha3: 'PLW',\n  numeric: 585,\n  latitude: 7.5,\n  longitude: 134.5,\n},\n{\n  country: 'Palestinian Territory',\n  alpha2: 'PS',\n  alpha3: 'PSE',\n  numeric: 275,\n  latitude: 32,\n  longitude: 35.25,\n},\n{\n  country: 'Panama',\n  alpha2: 'PA',\n  alpha3: 'PAN',\n  numeric: 591,\n  latitude: 9,\n  longitude: -80,\n},\n{\n  country: 'Papua New Guinea',\n  alpha2: 'PG',\n  alpha3: 'PNG',\n  numeric: 598,\n  latitude: -6,\n  longitude: 147,\n},\n{\n  country: 'Paraguay',\n  alpha2: 'PY',\n  alpha3: 'PRY',\n  numeric: 600,\n  latitude: -23,\n  longitude: -58,\n},\n{\n  country: 'Peru',\n  alpha2: 'PE',\n  alpha3: 'PER',\n  numeric: 604,\n  latitude: -10,\n  longitude: -76,\n},\n{\n  country: 'Philippines',\n  alpha2: 'PH',\n  alpha3: 'PHL',\n  numeric: 608,\n  latitude: 13,\n  longitude: 122,\n},\n{\n  country: 'Pitcairn',\n  alpha2: 'PN',\n  alpha3: 'PCN',\n  numeric: 612,\n  latitude: -24.7,\n  longitude: -127.4,\n},\n{\n  country: 'Poland',\n  alpha2: 'PL',\n  alpha3: 'POL',\n  numeric: 616,\n  latitude: 52,\n  longitude: 20,\n},\n{\n  country: 'Portugal',\n  alpha2: 'PT',\n  alpha3: 'PRT',\n  numeric: 620,\n  latitude: 39.5,\n  longitude: -8,\n},\n{\n  country: 'Puerto Rico',\n  alpha2: 'PR',\n  alpha3: 'PRI',\n  numeric: 630,\n  latitude: 18.25,\n  longitude: -66.5,\n},\n{\n  country: 'Qatar',\n  alpha2: 'QA',\n  alpha3: 'QAT',\n  numeric: 634,\n  latitude: 25.5,\n  longitude: 51.25,\n},\n{\n  country: 'Réunion',\n  alpha2: 'RE',\n  alpha3: 'REU',\n  numeric: 638,\n  latitude: -21.1,\n  longitude: 55.6,\n},\n{\n  country: 'Romania',\n  alpha2: 'RO',\n  alpha3: 'ROU',\n  numeric: 642,\n  latitude: 46,\n  longitude: 25,\n},\n{\n  country: 'Russian Federation',\n  alpha2: 'RU',\n  alpha3: 'RUS',\n  numeric: 643,\n  latitude: 60,\n  longitude: 100,\n},\n{\n  country: 'Rwanda',\n  alpha2: 'RW',\n  alpha3: 'RWA',\n  numeric: 646,\n  latitude: -2,\n  longitude: 30,\n},\n{\n  country: 'Saint Helena, Ascension and Tristan da Cunha',\n  alpha2: 'SH',\n  alpha3: 'SHN',\n  numeric: 654,\n  latitude: -15.9333,\n  longitude: -5.7,\n},\n{\n  country: 'Saint Kitts and Nevis',\n  alpha2: 'KN',\n  alpha3: 'KNA',\n  numeric: 659,\n  latitude: 17.3333,\n  longitude: -62.75,\n},\n{\n  country: 'Saint Lucia',\n  alpha2: 'LC',\n  alpha3: 'LCA',\n  numeric: 662,\n  latitude: 13.8833,\n  longitude: -61.1333,\n},\n{\n  country: 'Saint Pierre and Miquelon',\n  alpha2: 'PM',\n  alpha3: 'SPM',\n  numeric: 666,\n  latitude: 46.8333,\n  longitude: -56.3333,\n},\n{\n  country: 'Saint Vincent and Grenadines',\n  alpha2: 'VC',\n  alpha3: 'VCT',\n  numeric: 670,\n  latitude: 13.25,\n  longitude: -61.2,\n},\n{\n  country: 'Samoa',\n  alpha2: 'WS',\n  alpha3: 'WSM',\n  numeric: 882,\n  latitude: -13.5833,\n  longitude: -172.3333,\n},\n{\n  country: 'San Marino',\n  alpha2: 'SM',\n  alpha3: 'SMR',\n  numeric: 674,\n  latitude: 43.7667,\n  longitude: 12.4167,\n},\n{\n  country: 'Sao Tome and Principe',\n  alpha2: 'ST',\n  alpha3: 'STP',\n  numeric: 678,\n  latitude: 1,\n  longitude: 7,\n},\n{\n  country: 'Saudi Arabia',\n  alpha2: 'SA',\n  alpha3: 'SAU',\n  numeric: 682,\n  latitude: 25,\n  longitude: 45,\n},\n{\n  country: 'Senegal',\n  alpha2: 'SN',\n  alpha3: 'SEN',\n  numeric: 686,\n  latitude: 14,\n  longitude: -14,\n},\n{\n  country: 'Serbia',\n  alpha2: 'RS',\n  alpha3: 'SRB',\n  numeric: 688,\n  latitude: 44,\n  longitude: 21,\n},\n{\n  country: 'Seychelles',\n  alpha2: 'SC',\n  alpha3: 'SYC',\n  numeric: 690,\n  latitude: -4.5833,\n  longitude: 55.6667,\n},\n{\n  country: 'Sierra Leone',\n  alpha2: 'SL',\n  alpha3: 'SLE',\n  numeric: 694,\n  latitude: 8.5,\n  longitude: -11.5,\n},\n{\n  country: 'Singapore',\n  alpha2: 'SG',\n  alpha3: 'SGP',\n  numeric: 702,\n  latitude: 1.3667,\n  longitude: 103.8,\n},\n{\n  country: 'Slovakia',\n  alpha2: 'SK',\n  alpha3: 'SVK',\n  numeric: 703,\n  latitude: 48.6667,\n  longitude: 19.5,\n},\n{\n  country: 'Slovenia',\n  alpha2: 'SI',\n  alpha3: 'SVN',\n  numeric: 705,\n  latitude: 46,\n  longitude: 15,\n},\n{\n  country: 'Solomon Islands',\n  alpha2: 'SB',\n  alpha3: 'SLB',\n  numeric: 90,\n  latitude: -8,\n  longitude: 159,\n},\n{\n  country: 'Somalia',\n  alpha2: 'SO',\n  alpha3: 'SOM',\n  numeric: 706,\n  latitude: 10,\n  longitude: 49,\n},\n{\n  country: 'South Africa',\n  alpha2: 'ZA',\n  alpha3: 'ZAF',\n  numeric: 710,\n  latitude: -29,\n  longitude: 24,\n},\n{\n  country: 'South Georgia and the South Sandwich Islands',\n  alpha2: 'GS',\n  alpha3: 'SGS',\n  numeric: 239,\n  latitude: -54.5,\n  longitude: -37,\n},\n{\n  country: 'Spain',\n  alpha2: 'ES',\n  alpha3: 'ESP',\n  numeric: 724,\n  latitude: 40,\n  longitude: -4,\n},\n{\n  country: 'Sri Lanka',\n  alpha2: 'LK',\n  alpha3: 'LKA',\n  numeric: 144,\n  latitude: 7,\n  longitude: 81,\n},\n{\n  country: 'Sudan',\n  alpha2: 'SD',\n  alpha3: 'SDN',\n  numeric: 736,\n  latitude: 15,\n  longitude: 30,\n},\n{\n  country: 'South Sudan',\n  alpha2: 'SSD',\n  alpha3: 'SDN',\n  numeric: 7326,\n  latitude: 7.8627,\n  longitude: 29.6949,\n},\n{\n  country: 'Suriname',\n  alpha2: 'SR',\n  alpha3: 'SUR',\n  numeric: 740,\n  latitude: 4,\n  longitude: -56,\n},\n{\n  country: 'Svalbard and Jan Mayen',\n  alpha2: 'SJ',\n  alpha3: 'SJM',\n  numeric: 744,\n  latitude: 78,\n  longitude: 20,\n},\n{\n  country: 'Swaziland',\n  alpha2: 'SZ',\n  alpha3: 'SWZ',\n  numeric: 748,\n  latitude: -26.5,\n  longitude: 31.5,\n},\n{\n  country: 'Sweden',\n  alpha2: 'SE',\n  alpha3: 'SWE',\n  numeric: 752,\n  latitude: 62,\n  longitude: 15,\n},\n{\n  country: 'Switzerland',\n  alpha2: 'CH',\n  alpha3: 'CHE',\n  numeric: 756,\n  latitude: 47,\n  longitude: 8,\n},\n{\n  country: 'Syrian Arab Republic (Syria)',\n  alpha2: 'SY',\n  alpha3: 'SYR',\n  numeric: 760,\n  latitude: 35,\n  longitude: 38,\n},\n{\n  country: 'Taiwan, Republic of China',\n  alpha2: 'TW',\n  alpha3: 'TWN',\n  numeric: 158,\n  latitude: 23.5,\n  longitude: 121,\n},\n{\n  country: 'Tajikistan',\n  alpha2: 'TJ',\n  alpha3: 'TJK',\n  numeric: 762,\n  latitude: 39,\n  longitude: 71,\n},\n{\n  country: 'Tanzania, United Republic of',\n  alpha2: 'TZ',\n  alpha3: 'TZA',\n  numeric: 834,\n  latitude: -6,\n  longitude: 35,\n},\n{\n  country: 'Thailand',\n  alpha2: 'TH',\n  alpha3: 'THA',\n  numeric: 764,\n  latitude: 15,\n  longitude: 100,\n},\n{\n  country: 'Timor-Leste',\n  alpha2: 'TL',\n  alpha3: 'TLS',\n  numeric: 626,\n  latitude: -8.55,\n  longitude: 125.5167,\n},\n{\n  country: 'Togo',\n  alpha2: 'TG',\n  alpha3: 'TGO',\n  numeric: 768,\n  latitude: 8,\n  longitude: 1.1667,\n},\n{\n  country: 'Tokelau',\n  alpha2: 'TK',\n  alpha3: 'TKL',\n  numeric: 772,\n  latitude: -9,\n  longitude: -172,\n},\n{\n  country: 'Tonga',\n  alpha2: 'TO',\n  alpha3: 'TON',\n  numeric: 776,\n  latitude: -20,\n  longitude: -175,\n},\n{\n  country: 'Trinidad and Tobago',\n  alpha2: 'TT',\n  alpha3: 'TTO',\n  numeric: 780,\n  latitude: 11,\n  longitude: -61,\n},\n{\n  country: 'Tunisia',\n  alpha2: 'TN',\n  alpha3: 'TUN',\n  numeric: 788,\n  latitude: 34,\n  longitude: 9,\n},\n{\n  country: 'Turkey',\n  alpha2: 'TR',\n  alpha3: 'TUR',\n  numeric: 792,\n  latitude: 39,\n  longitude: 35,\n},\n{\n  country: 'Turkmenistan',\n  alpha2: 'TM',\n  alpha3: 'TKM',\n  numeric: 795,\n  latitude: 40,\n  longitude: 60,\n},\n{\n  country: 'Turks and Caicos Islands',\n  alpha2: 'TC',\n  alpha3: 'TCA',\n  numeric: 796,\n  latitude: 21.75,\n  longitude: -71.5833,\n},\n{\n  country: 'Tuvalu',\n  alpha2: 'TV',\n  alpha3: 'TUV',\n  numeric: 798,\n  latitude: -8,\n  longitude: 178,\n},\n{\n  country: 'Uganda',\n  alpha2: 'UG',\n  alpha3: 'UGA',\n  numeric: 800,\n  latitude: 1,\n  longitude: 32,\n},\n{\n  country: 'Ukraine',\n  alpha2: 'UA',\n  alpha3: 'UKR',\n  numeric: 804,\n  latitude: 49,\n  longitude: 32,\n},\n{\n  country: 'United Arab Emirates',\n  alpha2: 'AE',\n  alpha3: 'ARE',\n  numeric: 784,\n  latitude: 24,\n  longitude: 54,\n},\n{\n  country: 'United Kingdom',\n  alpha2: 'GB',\n  alpha3: 'GBR',\n  numeric: 826,\n  latitude: 54,\n  longitude: -2,\n},\n{\n  country: 'United States of America',\n  alpha2: 'US',\n  alpha3: 'USA',\n  numeric: 840,\n  latitude: 38,\n  longitude: -97,\n},\n{\n  country: 'United States Minor Outlying Islands',\n  alpha2: 'UM',\n  alpha3: 'UMI',\n  numeric: 581,\n  latitude: 19.2833,\n  longitude: 166.6,\n},\n{\n  country: 'Uruguay',\n  alpha2: 'UY',\n  alpha3: 'URY',\n  numeric: 858,\n  latitude: -33,\n  longitude: -56,\n},\n{\n  country: 'Uzbekistan',\n  alpha2: 'UZ',\n  alpha3: 'UZB',\n  numeric: 860,\n  latitude: 41,\n  longitude: 64,\n},\n{\n  country: 'Vanuatu',\n  alpha2: 'VU',\n  alpha3: 'VUT',\n  numeric: 548,\n  latitude: -16,\n  longitude: 167,\n},\n{\n  country: 'Venezuela (Bolivarian Republic)',\n  alpha2: 'VE',\n  alpha3: 'VEN',\n  numeric: 862,\n  latitude: 8,\n  longitude: -66,\n},\n{\n  country: 'Viet Nam',\n  alpha2: 'VN',\n  alpha3: 'VNM',\n  numeric: 704,\n  latitude: 16,\n  longitude: 106,\n},\n{\n  country: 'Virgin Islands, British',\n  alpha2: 'VG',\n  alpha3: 'VGB',\n  numeric: 92,\n  latitude: 18.5,\n  longitude: -64.5,\n},\n{\n  country: 'Virgin Islands, U.S.',\n  alpha2: 'VI',\n  alpha3: 'VIR',\n  numeric: 850,\n  latitude: 18.3333,\n  longitude: -64.8333,\n},\n{\n  country: 'Wallis and Futuna',\n  alpha2: 'WF',\n  alpha3: 'WLF',\n  numeric: 876,\n  latitude: -13.3,\n  longitude: -176.2,\n},\n{\n  country: 'Western Sahara',\n  alpha2: 'EH',\n  alpha3: 'ESH',\n  numeric: 732,\n  latitude: 24.5,\n  longitude: -13,\n},\n{\n  country: 'Yemen',\n  alpha2: 'YE',\n  alpha3: 'YEM',\n  numeric: 887,\n  latitude: 15,\n  longitude: 48,\n},\n{\n  country: 'Zambia',\n  alpha2: 'ZM',\n  alpha3: 'ZMB',\n  numeric: 894,\n  latitude: -15,\n  longitude: 30,\n},\n{\n  country: 'Zimbabwe',\n  alpha2: 'ZW',\n  alpha3: 'ZWE',\n  numeric: 716,\n  latitude: -20,\n  longitude: 30,\n},\n{\n  country: 'Afghanistan',\n  alpha2: 'AF',\n  alpha3: 'AFG',\n  numeric: 4,\n  latitude: 33,\n  longitude: 65,\n},\n];\n","addEventListener('load', initEventsDOM);\n\nfunction initEventsDOM() {\n  //open and close the window to full width\n  const listButtonOpen = document.querySelectorAll('.open');\n  listButtonOpen.forEach((item) => {\n    item.addEventListener('click', function(event) {\n      //define an object button\n      let target;\n      if(event.target.tagName === 'BUTTON') {\n        target = event.target;\n      };\n      if(event.target.tagName === 'I') {\n        target = event.target.parentElement;\n      };\n      const listHiddenModule = document.querySelectorAll('.wrap-data > div');\n      if(!target.classList.contains('close')) {\n        //hidden elements\n        listHiddenModule.forEach((item) => {\n          item.classList.toggle('window-hidden');\n        });\n        //element active full width\n        target.parentElement.parentElement.classList.toggle('full-width');\n        target.innerHTML = '<i class=\"material-icons\">close</i>';\n        target.classList.toggle('close');\n      } else {\n        //close the window that is full width\n        target.classList.toggle('close');\n        target.parentElement.parentElement.classList.toggle('full-width');\n        target.innerHTML = '<i class=\"material-icons\">zoom_out_map</i>';\n        listHiddenModule.forEach((item) => {\n          item.classList.toggle('window-hidden');\n        });\n      }\n    })\n  });\n\n  \n}\n","import { country_codes } from './country-codes';\n\nconst mapBox = 'pk.eyJ1IjoiZmVkb3JvdmljaHBhdmVsIiwiYSI6ImNraW5lcTkzMzBtMW8ycm81cTd6N3N3aDIifQ.botvkeUgOwWBdkRdCIwuWg';\n\nmapboxgl.accessToken = mapBox;\n\nconst map = new mapboxgl.Map({\n    container: 'map',\n    style: 'mapbox://styles/mapbox/dark-v10',\n    zoom: 0.5,\n    center: [50, 20],\n    scroll: false\n});\n\nconst latlongMap = new Map();\ncountry_codes.forEach((e) => latlongMap.set(e.country, [e.longitude, e.latitude]));\n\n/* Определение местоположения\nfetch(\"http://api.ipstack.com/37.215.40.61?access_key=4d45dec0ea3029c6c74945486042836a&format=1\", requestOptions)\n    .then(response => response.json())\n    .then(data => { console.log(data) })\n    */\n\nconst getMarkColor = (x) => {\n    if (x <= 100) { return '#f6dddd'; }\n    if (x <= 1000) { return '#f4b5b5'; }\n    if (x <= 10000) { return '#fa8080'; }\n    if (x <= 100000) { return '#f84848'; }\n    return '#ae0000';\n};\n\nconst requestOptions = {\n    method: 'GET',\n    redirect: 'follow',\n};\n\nfetch('https://api.covid19api.com/summary', requestOptions)\n    .then((response) => response.json())\n    .then((data) => {\n        data.Countries.forEach((country) => {\n            const { TotalConfirmed, Country } = country;\n            new mapboxgl.Marker({\n                    color: getMarkColor(TotalConfirmed),\n                })\n                .setLngLat(latlongMap.get(Country))\n                .addTo(map);\n        });\n\n    })\n    .catch(() => new Error());","const searchCountry = document.querySelector('.pick__country')\nconst nameOfCountry = document.querySelector('.name')\nconst countryList = document.querySelector('.country-list')\nconst hideList = document.querySelector('.close')\nconst input = document.getElementById('search__country')\n\n\nfunction showAllCountries() {\n\tconst numberOfCountries = country_list.length;\n\n\tlet i = 0, changeUlListId;\n\n\tcountry_list.forEach((country, index) => {\n\t\tif (index % Math.ceil(numberOfCountries / listsNumber) == 0) {\n\t\t\tchangeUlListId = `list-${i}`;\n\t\t\tcountryList.innerHTML += `<ul id='${changeUlListId}'></ul>`;\n\t\t\ti++;\n\t\t}\n\t\tdocument.getElementById(`${changeUlListId}`).innerHTML += `\n\t\t<li onclick='fetchDataCountries(\"${country.name}\")' id=\"${country.name}\">\n\t\t${country.name}\n\t\t</li>\n\n\t\t`\n\t})\n};\nlet listsNumber = 3;\nshowAllCountries();\n\nhideList.addEventListener('click', () => {\n\tsearchCountry.classList.add('hide');\n});\nnameOfCountry.addEventListener('click', () => {\n\tinput.value = '';\n\tresetCountryList();\n\tsearchCountry.classList.toggle('hide');\n\tsearchCountry.classList.add('fadeIn');\n\tinput.focus();\n});\ncountryList.addEventListener('click', () => {\n\tsearchCountry.classList.toggle('hide');\n});\n\ninput.addEventListener('input', () => {\n\tlet value = input.value.toUpperCase();\n\n\tcountry_list.forEach(country => {\n\t\tif (country.name.toUpperCase().startsWith(value)) {\n\t\t\tdocument.getElementById(country.name).classList.remove('hide');\n\t\t} else {\n\t\t\tdocument.getElementById(country.name).classList.add('hide');\n\t\t}\n\t})\n})\n\nconst resetCountryList = () => {\n\tcountry_list.forEach(country => {\n\t\tdocument.getElementById(country.name).classList.remove('hide');\n\t})\n}\n\n// Work with api\nconst nameOFCountry = document.querySelector(\".country .name\");\nconst totalCasesValue = document.querySelector(\".total__cases .value\");\nconst newCasesValue = document.querySelector(\".total__cases .new-value\");\nconst recoveredValue = document.querySelector(\".recovered .value\");\nconst newRecoveredValue = document.querySelector(\".recovered .new-value\");\nconst deathsValue = document.querySelector(\".deaths .value\");\nconst newDeathsValue = document.querySelector(\".deaths .new-value\");\n\nconst ctx = document.getElementById(\"chart\").getContext(\"2d\");\n\nlet globalDataArr = [],\n\tcasesArr = [],\n\trecoveredArr = [],\n\tdeathsArr = [],\n\tdeaths = [],\n\tdatesArr = [];\n\nlet codeOfCountry = geoplugin_countryCode(),\n\tyourCountry;\ncountry_list.forEach(country => {\n\tif (country.code === codeOfCountry) {\n\t\tyourCountry = country.name;\n\t}\n})\n\n\nfunction fetchDataCountries(country) {\n\tyourCountry = country;\n\tnameOFCountry.innerHTML = \"Loading...\";\n\n\t(casesArr = []),\n\t\t(recoveredArr = []),\n\t\t(deathsArr = []),\n\t\t(dates = []),\n\t\t(datesArr = []);\n\n\tlet requestVariation = {\n\t\tmethod: \"GET\",\n\t\tredirect: \"follow\",\n\t};\n\n\tconst fetchApi = async (country) => {\n\t\tawait fetch(\n\t\t\t`https://api.covid19api.com/total/country/${country}/status/confirmed`,\n\t\t\trequestVariation\n\t\t)\n\t\t\t.then((res) => {\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tdata.forEach((item) => {\n\t\t\t\t\tdates.push(item.Date);\n\t\t\t\t\tcasesArr.push(item.Cases);\n\t\t\t\t});\n\t\t\t});\n\n\t\tawait fetch(\n\t\t\t`https://api.covid19api.com/total/country/${country}/status/recovered`,\n\t\t\trequestVariation\n\t\t)\n\t\t\t.then((res) => {\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then((data) => {\n\n\t\t\t\tdata.forEach((item) => {\n\t\t\t\t\trecoveredArr.push(item.Cases);\n\t\t\t\t});\n\t\t\t});\n\n\t\tawait fetch(\n\t\t\t`https://api.covid19api.com/total/country/${country}/status/deaths`,\n\t\t\trequestVariation\n\t\t)\n\t\t\t.then((res) => {\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tdata.forEach((item) => {\n\t\t\t\t\tdeathsArr.push(item.Cases);\n\t\t\t\t});\n\t\t\t});\n\n\t\tupdateStatChart();\n\t};\n\n\tfetchApi(country);\n}\n\nfetchDataCountries(yourCountry);\n\n// Update Statistics and Chart\nfunction updateStatChart() {\n\tupdateStatistics();\n\tchartIt();\n}\n\nfunction updateStatistics() {\n\tconst totalCases = casesArr[casesArr.length - 1];\n\n\tconst newCases = totalCases - casesArr[casesArr.length - 2];\n\n\tconst totalRecovered = recoveredArr[recoveredArr.length - 1];\n\tconst newRecoveredCases =\n\t\ttotalRecovered - recoveredArr[recoveredArr.length - 2];\n\n\tconst totalDeaths = deathsArr[deathsArr.length - 1];\n\tconst newDeathsCases = totalDeaths - deathsArr[deathsArr.length - 2];\n\n\tnameOFCountry.innerHTML = yourCountry;\n\ttotalCasesValue.innerHTML = totalCases;\n\tnewCasesValue.innerHTML = `+${newCases}`;\n\trecoveredValue.innerHTML = totalRecovered;\n\tnewRecoveredValue.innerHTML = `+${newRecoveredCases}`;\n\tdeathsValue.innerHTML = totalDeaths;\n\tnewDeathsValue.innerHTML = `+${newDeathsCases}`;\n\n\t// format dates\n\tdates.forEach((date) => {\n\t\tdatesArr.push(formatDate(date));\n\t});\n}\n\n// UPDATE CHART\nlet chart;\nfunction chartIt() {\n\tif (chart) {\n\t\tchart.destroy();\n\t}\n\n\tchart = new Chart(ctx, {\n\t\ttype: \"bar\",\n\t\tdata: {\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Cases\",\n\t\t\t\t\tdata: casesArr,\n\t\t\t\t\tfill: false,\n\t\t\t\t\tborderColor: \"hsl(288, 97%, 71%)\",\n\t\t\t\t\tbackgroundColor: \"hsl(288, 97%, 71%)\",\n\t\t\t\t\tborderWidth: 1,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Recovered\",\n\t\t\t\t\tdata: recoveredArr,\n\t\t\t\t\tfill: false,\n\t\t\t\t\tborderColor: \"hsl(106, 96%, 35%)\",\n\t\t\t\t\tbackgroundColor: \"hsl(106, 96%, 35%)\",\n\t\t\t\t\tborderWidth: 1,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Deaths\",\n\t\t\t\t\tdata: deathsArr,\n\t\t\t\t\tfill: false,\n\t\t\t\t\tborderColor: \"black\",\n\t\t\t\t\tbackgroundColor: \"black\",\n\t\t\t\t\tborderWidth: 1,\n\t\t\t\t},\n\t\t\t],\n\t\t\tlabels: datesArr,\n\t\t},\n\t\toptions: {\n\t\t\tresponsive: true,\n\t\t\tmaintainAspectRatio: false,\n\t\t},\n\t});\n}\n\n// FORMAT DATES\nconst allMonths = [\n\t\"Jan\",\n\t\"Feb\",\n\t\"Mar\",\n\t\"Apr\",\n\t\"May\",\n\t\"Jun\",\n\t\"Aug\",\n\t\"Sep\",\n\t\"Oct\",\n\t\"Nov\",\n\t\"Dec\",\n];\n\nfunction formatDate(dateString) {\n\tlet date = new Date(dateString);\n\n\treturn `${date.getDate()} ${allMonths[date.getMonth() - 1]}`;\n}\n\n","\nimport './assets/js/map';\nimport './assets/js/app';\nimport './assets/js/main';\nimport './normalize.css';\nimport './style.css';\n\nimport './assets/js/script';\nimport './assets/js/country-codes';\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/index.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}